function textPanel(gui)
% Creates a panel for editing general legend properties  

% Copyright (c) 2024, Kenneth SÃ¦terhagen Paulsen

    % Create panel
    %--------------------------------------------------------------
    uip = uipanel('parent',              gui.figureHandle,...
                  'title',               '',...
                  'visible',             'on',...
                  'borderType',          'none',... 
                  'units',               'normalized',...
                  'position',            [0.22, 0.02, 1 - 0.24, 0.96]); 
    gui.panelHandle1 = uip;
    
    % Get the colors to choose from
    %--------------------------------------------------------------
    
    % Locate or give default color to the variable
    endc = gui.defaultColors;
  
    % Locate the selected face color in the color list
    colorTemp = gui.format.color;
    if ischar(colorTemp)
        colorTemp = nb_plotHandle.interpretColor(colorTemp);
    elseif iscell(colorTemp)
        colorTemp = nb_plotHandle.interpretColor(colorTemp);
    end

    [~,valueColor] = ismember(colorTemp,endc,'rows');
    if valueColor == 0
        endc              = [endc;colorTemp];
        valueColor        = size(endc,1);
        gui.defaultColors = endc;
    end
    
    % Using html coding to get the background of the 
    % listbox colored  
    colors = nb_htmlColors(endc);
    
    % Locations
    startPopX = 0.4;
    widthPop  = 0.35;
    heightPop = 0.055;
    startTX   = 0.04;
    widthT    = startPopX - startTX*2;
    heightT   = 0.053;
    widthB    = 1 - startPopX - widthPop - startTX*2;
    startB    = startPopX + widthPop + startTX;
    kk        = 9;
    spaceYPop = (1 - heightPop*kk)/(kk+1);
    extra     = -(heightPop - heightT)*5;
    
    % Text
    %--------------------------------------------------------------
    if gui.format.edited
        enable = 'on';
    else
        enable = 'off';
    end
    enable2 = 'on';
    
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Text');
     
    string = uicontrol(...
              'units',          'normalized',...
              'position',       [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',         uip,...
              'background',     [1 1 1],...
              'enable',         enable,...
              'style',          'edit',...
              'Interruptible',  'off',...
              'string',         gui.format.string,...
              'callback',       {@gui.set,'string'});
    
    uicontrol(...
              'units',          'normalized',...
              'position',       [startB, heightPop*(kk-1) + spaceYPop*kk, widthB, heightPop],...
              'parent',         uip,...
              'style',          'radiobutton',...
              'Interruptible',  'off',...
              'enable',         enable2,...
              'busyAction',     'cancel',...
              'string',         'Edit',...
              'value',          gui.format.edited,...
              'callback',       {@editingStringCallback,gui,string});       
             
    % Color
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol('units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Color'); 

    colmenu = uicontrol(...
              'units',          'normalized',...
              'position',       [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',         uip,...
              'background',     [1 1 1],...
              'style',          'popupmenu',...
              'Interruptible',  'off',...
              'tag',            'first',...
              'string',         colors,...
              'value',          valueColor,....
              'callback',       {@gui.set,'color'});

    coldef = uicontrol(...
              'units',          'normalized',...
              'position',       [startB, heightPop*(kk-1) + spaceYPop*kk, widthB, heightPop],...
              'parent',         uip,...
              'style',          'pushbutton',...
              'Interruptible',  'off',...
              'busyAction',     'cancel',...
              'string',         'Define');      
       
    gui.colorHandles.colorMenu   = colmenu;      
    gui.colorHandles.colorDefine = coldef;      
            
    % Decimals
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Decimals');
    
    string = {'0','1','2','3','4'};
    value  = find(strcmpi(int2str(gui.format.decimals),string));
    if isempty(value)
        value = 3;
    end     
    
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',                 uip,...
              'background',             [1 1 1],...
              'style',                  'popupmenu',...
              'Interruptible',          'off',...
              'string',                 string,...
              'value',                  value,...
              'callback',               {@gui.set,'decimals'});
    
    % Font Angle
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Font Angle');
    
    string = {'normal','italic'};
    value  = find(strcmpi(int2str(gui.format.fontAngle),string));
    if isempty(value)
        value = 1;
    end   
    
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',                 uip,...
              'background',             [1 1 1],...
              'style',                  'popupmenu',...
              'Interruptible',          'off',...
              'string',                 string,...
              'value',                  value,...
              'callback',               {@gui.set,'fontAngle'});      
          
    % Font Size
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Font Size');
    
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',                 uip,...
              'background',             [1 1 1],...
              'style',                  'edit',...
              'horizontalAlignment',    'right',...
              'Interruptible',          'off',...
              'string',                 num2str(gui.format.fontSize),...
              'callback',               {@gui.set,'fontSize'});
    
    % Font Weight
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Font Weight');

    weights = {'Normal','Bold','Light','Demi'};
    value   = find(strcmpi(gui.format.fontWeight,weights),1);
    if isempty(value)
        value = 1;
    end
    
    uicontrol(...
              'units',          'normalized',...
              'position',       [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',          uip,...
              'background',     [1 1 1],...
              'style',          'popupmenu',...
              'Interruptible',  'off',...
              'string',         weights,...
              'value',          value,....
              'callback',       {@gui.set,'fontWeight'});
          
    % Interpreter
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Interpreter');
    
    string = {'none','tex','latex'};
    value  = find(strcmpi(int2str(gui.format.interpreter),string));
    if isempty(value)
        value = 1;
    end   
    
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',                 uip,...
              'background',             [1 1 1],...
              'style',                  'popupmenu',...
              'Interruptible',          'off',...
              'string',                 string,...
              'value',                  value,...
              'callback',               {@gui.set,'interpreter'});
          
    % Value type
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Value type');
    
    switch lower(gui.class)
        case {'nb_bar','nb_hbar','nb_area'}
            string = {'Normal', 'Cumsum'};
        case 'nb_pie'
            string = {'Normal', 'Share'};
        otherwise
            string = {'Normal'};
    end
    
    value  = find(strcmpi(int2str(gui.format.valueType),string));
    if isempty(value)
        value = 1;
    end
          
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',                 uip,...
              'background',             [1 1 1],...
              'style',                  'popupmenu',...
              'Interruptible',          'off',...
              'string',                 string,...
              'value',                  value,...
              'callback',               {@gui.set,'valueType'});
          
    % Text format
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Text format');
    
    string = {'none','%','$','kr'};
    value  = find(strcmpi(int2str(gui.format.textFormat),string));
    if isempty(value)
        value = 1;
    end
          
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',                 uip,...
              'background',             [1 1 1],...
              'style',                  'popupmenu',...
              'Interruptible',          'off',...
              'string',                 string,...
              'value',                  value,...
              'callback',               {@gui.set,'textFormat'});
             
end

function editingStringCallback(hObject,~,gui,string)

    if get(hObject,'value')
        set(string,'enable','on');
        gui.format.edited = true;
    else
        set(string,'enable','off');
        gui.format.edited = false;
    end
    setFormat(gui);
      
end
