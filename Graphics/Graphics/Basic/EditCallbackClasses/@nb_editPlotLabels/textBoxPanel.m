function textBoxPanel(gui)
% Creates a panel for editing general legend properties  

% Copyright (c) 2021, Kenneth SÃ¦terhagen Paulsen

    % Create panel
    %--------------------------------------------------------------
    uip = uipanel('parent',              gui.figureHandle,...
                  'title',               '',...
                  'visible',             'off',...
                  'borderType',          'none',... 
                  'units',               'normalized',...
                  'position',            [0.22, 0.02, 1 - 0.24, 0.96]); 
    gui.panelHandle2 = uip;
    
    % Get the colors to choose from
    %--------------------------------------------------------------
    
    % Locate or give default color to the variable
    endc = gui.defaultColors;
  
    % Locate the selected face color in the color list
    bColor = gui.format.backgroundColor;
    if ischar(bColor)
        bColor = nb_plotHandle.interpretColor(bColor);
    elseif iscell(bColor)
        bColor = nb_plotHandle.interpretColor(bColor);
    end
    
    eColor = gui.format.edgeColor;
    if ischar(eColor)
        eColor = nb_plotHandle.interpretColor(eColor);
    elseif iscell(eColor)
        eColor = nb_plotHandle.interpretColor(eColor);
    end

    if ischar(bColor)
        valueBColor = 1;
    else
        [~,valueBColor] = ismember(bColor,endc,'rows');
        if valueBColor == 0
            endc              = [endc;bColor];
            valueBColor       = size(endc,1);
            gui.defaultColors = endc;
        end
        valueBColor = valueBColor + 1;
    end
    
    if ischar(eColor)
        valueEColor = 1;
    else
        [~,valueEColor] = ismember(eColor,endc,'rows');
        if valueEColor == 0
            endc              = [endc;eColor];
            valueEColor       = size(endc,1);
            gui.defaultColors = endc;
        end
        valueEColor = valueEColor + 1;
    end
    
    % Using html coding to get the background of the 
    % listbox colored  
    colors = nb_htmlColors(endc);
    colors = ['none';colors];
    
    % Locations
    %----------------------------------------------------------------
    startPopX = 0.4;
    widthPop  = 0.35;
    heightPop = 0.055;
    startTX   = 0.04;
    widthT    = startPopX - startTX*2;
    heightT   = 0.053;
    widthB    = 1 - startPopX - widthPop - startTX*2;
    startB    = startPopX + widthPop + startTX;
    kk        = 9;
    spaceYPop = (1 - heightPop*kk)/(kk+1);
    extra     = -(heightPop - heightT)*5;
    
    % Background Color
    %--------------------------------------------------------------
    uicontrol('units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Background Color'); 

    colmenu = uicontrol(...
              'units',          'normalized',...
              'position',       [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',         uip,...
              'background',     [1 1 1],...
              'style',          'popupmenu',...
              'Interruptible',  'off',...
              'tag',            'first',...
              'string',         colors,...
              'value',          valueBColor,....
              'callback',       {@gui.set,'backgroundColor'});

    coldef = uicontrol(...
              'units',          'normalized',...
              'position',       [startB, heightPop*(kk-1) + spaceYPop*kk, widthB, heightPop],...
              'parent',         uip,...
              'style',          'pushbutton',...
              'Interruptible',  'off',...
              'busyAction',     'cancel',...
              'string',         'Define');      
       
    gui.colorHandles.backgroundColorMenu   = colmenu;      
    gui.colorHandles.backgroundColorDefine = coldef;  
    
    % Edge Color
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol('units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Edge Color'); 

    colmenu = uicontrol(...
              'units',          'normalized',...
              'position',       [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',         uip,...
              'background',     [1 1 1],...
              'style',          'popupmenu',...
              'Interruptible',  'off',...
              'tag',            'first',...
              'string',         colors,...
              'value',          valueEColor,....
              'callback',       {@gui.set,'edgeColor'});

    coldef = uicontrol(...
              'units',          'normalized',...
              'position',       [startB, heightPop*(kk-1) + spaceYPop*kk, widthB, heightPop],...
              'parent',         uip,...
              'style',          'pushbutton',...
              'Interruptible',  'off',...
              'busyAction',     'cancel',...
              'string',         'Define');      
       
    gui.colorHandles.edgeColorMenu   = colmenu;      
    gui.colorHandles.edgeColorDefine = coldef; 
              
    % Line Style
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Line Style');

    lineStyles = {'-','--',':','-.','none'};       
    value      = find(strcmpi(gui.format.lineStyle,lineStyles),1);

    uicontrol(...
              'units',          'normalized',...
              'position',       [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',          uip,...
              'background',     [1 1 1],...
              'style',          'popupmenu',...
              'Interruptible',  'off',...
              'string',         lineStyles,...
              'value',          value,....
              'callback',       {@gui.set,'lineStyle'});
   
    % Line Width
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Line Width');

    uicontrol(...
              'units',                  'normalized',...
              'position',               [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',                 uip,...
              'background',             [1 1 1],...
              'style',                  'edit',...
              'horizontalAlignment',    'right',...
              'Interruptible',          'off',...
              'string',                 num2str(gui.format.lineWidth),...
              'callback',               {@gui.set,'lineWidth'});
          
    % Margin (in pixels)
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Margin (in pixels)');

    uicontrol(...
              'units',                  'normalized',...
              'position',               [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',                 uip,...
              'background',             [1 1 1],...
              'style',                  'edit',...
              'horizontalAlignment',    'right',...
              'Interruptible',          'off',...
              'string',                 num2str(gui.format.margin),...
              'callback',               {@gui.set,'margin'});
             
end
