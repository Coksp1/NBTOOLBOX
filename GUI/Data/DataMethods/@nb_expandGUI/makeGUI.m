function makeGUI(gui)
% Syntax:
%
% makeGUI(gui)
%
% Description:
%
% Part of DAG.
% 
% Written by Kenneth Sæterhagen Paulsen

% Copyright (c) 2021, Kenneth Sæterhagen Paulsen

    % Get the handle to the main program
    mainGUI = gui.parent;    
    figName = 'Expand Window';
    
    
    % Create window
    if isa(mainGUI,'nb_GUI')
        name = [mainGUI.guiName ': ' figName];
    else
        name = figName;
    end
    
    currentMonitor    = nb_getCurrentMonitor();
    defaultBackground = get(0,'defaultUicontrolBackgroundColor');
    f = figure('visible',        'on',...
               'units',          'characters',...
               'position',       [65,   15,  50,   15],...
               'Color',          defaultBackground,...
               'name',           name,...
               'numberTitle',    'off',...
               'menuBar',        'None',...
               'toolBar',        'None',...
               'resize',         'off');
    nb_moveFigureToMonitor(f,currentMonitor,'center');
    
    % Get current dataset window
    % for use as default values
    currentStart = '';
    currentEnd = '';
    if isa(gui.data, 'nb_ts')
        currentStart = gui.data.startDate.toString();
        currentEnd = gui.data.endDate.toString();
    elseif isa(gui.data, 'nb_data')
        currentStart = gui.data.startObs;
        currentEnd = gui.data.endObs;
    end
    
    % Locations
    %--------------------------------------------------------------
    numOfRows       = 4;
    marginX         = 0.08;
    marginY         = 0.1;
    rowHeight       = (1 - marginY*(numOfRows-1)) / numOfRows;
    
    % Container panel
    p = uipanel(f,...
        'BorderWidth', 0,...
        'position', [marginX marginY (1 - 2*marginX) (1 - 2*marginY)]);
    
    % Start date
    uicontrol(...
              'units',                  'normalized',...
              'position',               [0, 3*(rowHeight + marginY), 0.5, rowHeight],...
              'parent',                 p,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Start date');
    
    gui.startBox = uicontrol(...
              'units',                  'normalized',...
              'position',               [0.5, 3*(rowHeight + marginY), 0.5, rowHeight],...
              'parent',                 p,...
              'background',             [1 1 1],...
              'style',                  'edit',...
              'horizontalAlignment',    'left',...
              'Interruptible',          'off',...
              'string',                 currentStart);
       
    % End date
    uicontrol(...
              'units',                  'normalized',...
              'position',               [0, 2*(rowHeight + marginY), 0.5, rowHeight],...
              'parent',                 p,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'End date');
    
    gui.endBox = uicontrol(...
              'units',                  'normalized',...
              'position',               [0.5, 2*(rowHeight + marginY), 0.5, rowHeight],...
              'parent',                 p,...
              'style',                  'edit',...
              'background',             [1 1 1],...
              'horizontalAlignment',    'left',...
              'Interruptible',          'off',...
              'string',                 currentEnd);      
          
    % Type
    uicontrol(...
              'units',                  'normalized',...
              'position',               [0, rowHeight + marginY, 0.5, rowHeight],...
              'parent',                 p,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Type');
    
    gui.typePopOptions = {'nan' 'zeros' 'ones' 'rand' 'obs'};  
    options = {'NaN' '0' '1' 'Random' 'First/last observation'};    
    gui.typePop = uicontrol(...
              'units',              'normalized',...
              'position',           [0.5, rowHeight + marginY, 0.5, rowHeight],...
              'parent',             p,...
              'background',         [1 1 1],...
              'style',              'popupmenu',...
              'Interruptible',      'off',...
              'string',             options,...
              'value',              1);
     
    % Calculate button
    %--------------------------------------------------------------
    uicontrol(...
              'units',              'normalized',...
              'position',           [0, 0, 1, rowHeight],...
              'parent',             p,...
              'style',              'pushbutton',...
              'Interruptible',      'off',...
              'busyAction',         'cancel',...
              'string',             'OK',...
              'callback',           {@gui.expandCallback, f});        

    % Make GUI visible
    set(f,'visible','on');

end
