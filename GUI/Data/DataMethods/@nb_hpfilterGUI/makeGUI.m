function makeGUI(gui)
% Syntax:
%
% makeGUI(gui)
%
% Description:
%
% Part of DAG.
% 
% Written by Kenneth Sæterhagen Paulsen

% Copyright (c) 2023, Kenneth Sæterhagen Paulsen

    parent = gui.parent;

    % Create the main window
    %--------------------------------------------------------------
    if isa(parent,'nb_GUI')
        name = [parent.guiName ': HP-Filter'];
    else
        name = 'HP-Filter';
    end
    
    % Create window
    %--------------------------------------------------------------
    currentMonitor    = nb_getCurrentMonitor();
    defaultBackground = get(0,'defaultUicontrolBackgroundColor');
    f = figure(   'visible',        'off',...
                  'units',          'characters',...
                  'position',       [65,   15,  100,   30],...
                  'Color',          defaultBackground,...
                  'name',           name,...
                  'numberTitle',    'off',...
                  'menuBar',        'None',...
                  'toolBar',        'None',...
                  'resize',         'off',...
                  'windowStyle',    'modal');
    nb_moveFigureToMonitor(f,currentMonitor);
    
    % Locations
    %--------------------------------------------------------------
    startPopX = 0.2;
    widthPop  = 0.2;
    heightPop = 0.06;
    startTX   = 0.04;
    widthT    = startPopX - startTX*2;
    heightT   = 0.0533;
    widthB    = 1 - startPopX - widthPop - startTX*3;
    startB    = startPopX + widthPop + startTX * 2;
    kk        = 8; 
    spaceYPop = (1 - heightPop*kk)/(kk + 1);
    extra     = -(heightPop - heightT);
    elements  = 5;
    
    % Variables List
    %--------------------------------------------------------------
    startList = heightPop*(kk - elements - 2) + spaceYPop*(kk - elements - 1);
    uip1 = uipanel(...
        'units',              'normalized',...
        'position',           [startB, startList, widthB, 1 - spaceYPop - startList],...
        'parent',             f,...
        'title',              'Select Variables');
    
    num = size(gui.data.variables,2);
    
    gui.list1 = uicontrol(...
      'units',              'normalized',...
      'position',           [0.02, 0.02, 0.96, 0.96],...
      'parent',             uip1,...
      'background',         [1 1 1],...
      'style',              'listbox',...
      'string',             gui.data.variables,...
      'max',                num,...
      'value',              1:num);
    
    % Lambda
    %--------------------------------------------------------------
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 f,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Lambda');

    gui.edit1 = uicontrol(...
              'units',              'normalized',...
              'position',           [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',             f,...
              'background',         [1 1 1],...
              'style',              'edit',...
              'horizontalAlignment','right',...
              'Interruptible',      'off',...
              'string',             '1600',...
              'callback',           @gui.lambdaChangedCallback);
    
    % Output Panel
    %--------------------------------------------------------------
    panelWidth  = widthPop + widthT + startTX*2;
    panelHeight = heightPop*elements + spaceYPop*(elements + 1);
    kk = kk - elements - 1;
    uip2 = uipanel(...
        'units',              'normalized',...
        'position',           [startTX, heightPop*(kk-1) + spaceYPop*kk, panelWidth, panelHeight],...
        'parent',             f,...
        'title',              'Output');
    
    startTXP   = 0.04;
    startPopXP = startPopX/panelWidth;
    widthPopP  = startPopXP - startTXP;
    heightPopP = heightPop/panelHeight;
    widthTP    = startPopXP - startTXP*2;
    heightTP   = heightT/panelHeight;
    ff         = 6; 
    spaceYPopP = (1 - heightPopP*ff)/(ff + 1);
    extraP     = -(heightPopP - heightTP);
    
    % Return GAP
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTXP, heightPopP*(ff-1) + spaceYPopP*ff + extraP, widthTP, heightTP],...
              'parent',                 uip2,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Return Gap');
    
    gui.rb1 = uicontrol(...
              'units',              'normalized',...
              'position',           [startPopXP, heightPopP*(ff-1) + spaceYPopP*ff, widthPopP, heightPopP],...
              'parent',             uip2,...
              'style',              'radiobutton',...
              'Interruptible',      'off',...
              'value',              1,...
              'callback',           @gui.gapSelectionCallback);
       
    % Gap postfix
    ff = ff - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTXP, heightPopP*(ff-1) + spaceYPopP*ff + extraP, widthTP, heightTP],...
              'parent',                 uip2,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Gap Postfix');
    
    gui.edit2 = uicontrol(...
              'units',                  'normalized',...
              'position',               [startPopXP, heightPopP*(ff-1) + spaceYPopP*ff, widthPopP, heightPopP],...
              'parent',                 uip2,...
              'style',                  'edit',...
              'background',             [1 1 1],...
              'horizontalAlignment',    'left',...
              'Interruptible',          'off',...
              'string',                 '_hpgap1600');      
          
    % Return Trend
    ff = ff - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTXP, heightPopP*(ff-1) + spaceYPopP*ff + extraP, widthTP, heightTP],...
              'parent',                 uip2,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Return Trend');
    
    gui.rb2 = uicontrol(...
              'units',              'normalized',...
              'position',           [startPopXP, heightPopP*(ff-1) + spaceYPopP*ff, widthPopP, heightPopP],...
              'parent',             uip2,...
              'style',              'radiobutton',...
              'Interruptible',      'off',...
              'value',              1,...
              'callback',           @gui.trendSelectionCallback);  
       
    % Trend postfix
    ff = ff - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTXP, heightPopP*(ff-1) + spaceYPopP*ff + extraP, widthTP, heightTP],...
              'parent',                 uip2,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Trend Postfix');
    
    gui.edit3 = uicontrol(...
              'units',                  'normalized',...
              'position',               [startPopXP, heightPopP*(ff-1) + spaceYPopP*ff, widthPopP, heightPopP],...
              'parent',                 uip2,...
              'style',                  'edit',...
              'background',             [1 1 1],...
              'horizontalAlignment',    'left',...
              'Interruptible',          'off',...
              'string',                 '_hptrend1600');          
      
    % One sided
    ff = ff - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTXP, heightPopP*(ff-1) + spaceYPopP*ff + extraP, widthTP, heightTP],...
              'parent',                 uip2,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'One Sided');
    
    gui.rb3 = uicontrol(...
              'units',              'normalized',...
              'position',           [startPopXP, heightPopP*(ff-1) + spaceYPopP*ff, widthPopP, heightPopP],...
              'parent',             uip2,...
              'style',              'radiobutton',...
              'Interruptible',      'off',...
              'value',              0);       
          
    % Graph
    ff = ff - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTXP, heightPopP*(ff-1) + spaceYPopP*ff + extraP, widthTP, heightTP],...
              'parent',                 uip2,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Make Graph');
    
    gui.rb4 = uicontrol(...
              'units',              'normalized',...
              'position',           [startPopXP, heightPopP*(ff-1) + spaceYPopP*ff, widthPopP, heightPopP],...
              'parent',             uip2,...
              'style',              'radiobutton',...
              'Interruptible',      'off',...
              'value',              1);        
    
    % Calculate button
    %--------------------------------------------------------------
    buttonHeight = 0.0667;
    buttonWidth  = 0.3;
    buttonXLoc   = 0.5 - buttonWidth/2;
    buttonYLoc   = (heightPop*(kk-1) + spaceYPop*kk)/2 - buttonHeight/2;
    
    uicontrol(...
              'units',              'normalized',...
              'position',           [buttonXLoc, buttonYLoc, buttonWidth, buttonHeight],...
              'parent',             f,...
              'style',              'pushbutton',...
              'Interruptible',      'off',...
              'busyAction',         'cancel',...
              'string',             'Calculate',...
              'callback',           @gui.calculateCallback);
        
    % Make it visible
    %--------------------------------------------------------------
    set(f,'visible','on');
    
end
