function makeGUI(gui)
% Syntax:
%
% makeGUI(gui)
%
% Description:
%
% Part of DAG.
% 
% Written by Kenneth Sæterhagen Paulsen

% Copyright (c) 2024, Kenneth Sæterhagen Paulsen

    parent = gui.parent;

    % Create the main window
    %--------------------------------------------------------------
    if isa(parent,'nb_GUI')
        name = [parent.guiName ': Create Dummy'];
    else
        name = 'Create Dummy';
    end
    
    % Create window
    %--------------------------------------------------------------
    currentMonitor    = nb_getCurrentMonitor();
    defaultBackground = get(0,'defaultUicontrolBackgroundColor');
    f = figure(   'visible',        'off',...
                  'units',          'characters',...
                  'position',       [65,   15,  80,   30],...
                  'Color',          defaultBackground,...
                  'name',           name,...
                  'numberTitle',    'off',...
                  'menuBar',        'None',...
                  'toolBar',        'None',...
                  'resize',         'off',...
                  'windowStyle',    'modal');
    nb_moveFigureToMonitor(f,currentMonitor);
    gui.figureHandle = f;
    
    % Locations
    %--------------------------------------------------------------
    startPopX = 0.4;
    widthPop  = 0.4;
    heightPop = 0.06;
    startTX   = 0.04;
    widthT    = startPopX - startTX*2;
    heightT   = 0.0533;
%     widthB    = 1 - startPopX - widthPop - startTX*3;
%     startB    = startPopX + widthPop + startTX * 2;
    kk        = 8; 
    spaceYPop = (1 - heightPop*kk)/(kk + 1);
    extra     = -(heightPop - heightT);
    elements  = 5;
    
    % Type
    %--------------------------------------------------------------
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 f,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Dummy Type');

    if isa(gui.data,'nb_ts')      
        if gui.data.frequency == 4 || gui.data.frequency == 12 
            types = {'Time Dummy','Variable(s) Dummy','Seasonal Dummies'};
        else
            types =  {'Time Dummy','Variable(s) Dummy'};
        end
        
        obs   = toString(gui.data.startDate);
        tit1  = 'Time Dummy Options';
        tit2  = 'Date';
        
    else
        types = {'Time Dummy','Variable(s) Dummy'};
        obs   = num2str(gui.data.startObs);
        tit1  = 'Obs Dummy Options';
        tit2  = 'Obs';
    end
    
    
    gui.pop1 = uicontrol(...
              'units',              'normalized',...
              'position',           [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',             f,...
              'background',         [1 1 1],...
              'style',              'popupmenu',...
              'Interruptible',      'off',...
              'string',             types,...
              'value',              1,...
              'callback',           @gui.typeSelectionCallback);
    
    % Time Dummy Panel
    %--------------------------------------------------------------
    panelWidth  = 1 - startTX*2;
    panelHeight = heightPop*elements + spaceYPop*(elements + 1);
    kk = kk - elements - 1;
    uip1 = uipanel(...
        'units',              'normalized',...
        'position',           [startTX, heightPop*(kk-1) + spaceYPop*kk, panelWidth, panelHeight],...
        'parent',             f,...
        'title',              tit1);
    
    startTXP   = 0.04;
    startPopXP = startPopX/panelWidth;
    widthPopP  = startPopXP - startTXP;
    heightPopP = heightPop/panelHeight;
    widthTP    = startPopXP - startTXP*2;
    heightTP   = heightT/panelHeight;
    ff         = 6; 
    spaceYPopP = (1 - heightPopP*ff)/(ff + 1);
    extraP     = -(heightPopP - heightTP);
    
    % Dummy Name
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTXP, heightPopP*(ff-1) + spaceYPopP*ff + extraP, widthTP, heightTP],...
              'parent',                 uip1,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Dummy Name');
    
    gui.edit1 = uicontrol(...
              'units',                  'normalized',...
              'position',               [startPopXP, heightPopP*(ff-1) + spaceYPopP*ff, widthPopP, heightPopP],...
              'parent',                 uip1,...
              'background',             [1 1 1],...
              'style',                  'edit',...
              'horizontalAlignment',    'left',...
              'Interruptible',          'off',...
              'string',                 'Dummy');
       
    % Date
    ff = ff - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTXP, heightPopP*(ff-1) + spaceYPopP*ff + extraP, widthTP, heightTP],...
              'parent',                 uip1,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 tit2);
    
    gui.edit2 = uicontrol(...
              'units',                  'normalized',...
              'position',               [startPopXP, heightPopP*(ff-1) + spaceYPopP*ff, widthPopP, heightPopP],...
              'parent',                 uip1,...
              'style',                  'edit',...
              'background',             [1 1 1],...
              'horizontalAlignment',    'left',...
              'Interruptible',          'off',...
              'string',                 obs);      
           
    % Operator
    ff = ff - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTXP, heightPopP*(ff-1) + spaceYPopP*ff + extraP, widthTP, heightTP],...
              'parent',                 uip1,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Operator');
    
    operators = {'<','>','<=','>=','==','~='};      
    gui.pop2 = uicontrol(...
              'units',              'normalized',...
              'position',           [startPopXP, heightPopP*(ff-1) + spaceYPopP*ff, widthPopP, heightPopP],...
              'parent',             uip1,...
              'background',         [1 1 1],...
              'style',              'popupmenu',...
              'Interruptible',      'off',...
              'string',             operators,...
              'value',              1);
          
    % Variable(s) Dummy Panel
    %--------------------------------------------------------------
    panelWidth  = 1 - startTX*2;
    panelHeight = heightPop*elements + spaceYPop*(elements + 1);
    uip2 = uipanel(...
        'units',              'normalized',...
        'position',           [startTX, heightPop*(kk-1) + spaceYPop*kk, panelWidth, panelHeight],...
        'parent',             f,...
        'title',              'Variables(s) Dummy Options',...
        'visible',            'off');
    
    startTXP   = 0.04;
    startPopXP = startPopX/panelWidth;
    widthPopP  = startPopXP - startTXP;
    heightPopP = heightPop/panelHeight;
    widthTP    = startPopXP - startTXP*2;
    heightTP   = heightT/panelHeight;
    ff         = 6; 
    spaceYPopP = (1 - heightPopP*ff)/(ff + 1);
    extraP     = -(heightPopP - heightTP);
    
    % Dummy Name
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTXP, heightPopP*(ff-1) + spaceYPopP*ff + extraP, widthTP, heightTP],...
              'parent',                 uip2,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Dummy Name');
    
    gui.edit3 = uicontrol(...
              'units',                  'normalized',...
              'position',               [startPopXP, heightPopP*(ff-1) + spaceYPopP*ff, widthPopP, heightPopP],...
              'parent',                 uip2,...
              'background',             [1 1 1],...
              'style',                  'edit',...
              'horizontalAlignment',    'left',...
              'Interruptible',          'off',...
              'string',                 'Dummy');
       
    % Table
    tablePos    = [startTXP, spaceYPopP, 1 - startTXP*2, heightPopP*(5-1) + spaceYPopP*5.5];
    aggOperator = {'&','|'};
    tableData   = {gui.data.variables{1},operators{1},'0',aggOperator{1}};
    colNames    = {'Variable','Operator','Condition','Agg. Operator'};
    colForm     = {gui.data.variables,operators,'char',aggOperator};
    colEdit     = true(1,4);
    gui.table = nb_uitable(...
              'units',                  'normalized',...
              'position',               tablePos,...
              'parent',                 uip2,...
              'data',                   tableData,...
              'columnName',             colNames,...
              'columnFormat',           colForm,...
              'columnEdit',             colEdit,...
              'cellSelectionCallback',  @gui.getSelectedCells);      
      
    cMenu = uicontextmenu('parent',gui.figureHandle);
                uimenu(cMenu,'Label','Add','Callback',@gui.addRow);
                uimenu(cMenu,'Label','Delete','Callback',@gui.deleteRow);      
    set(gui.table,'UIContextMenu',cMenu);
    
    % Seasonal Dummy Panel
    %--------------------------------------------------------------
    panelWidth  = 1 - startTX*2;
    panelHeight = heightPop*elements + spaceYPop*(elements + 1);
    uip3 = uipanel(...
        'units',              'normalized',...
        'position',           [startTX, heightPop*(kk-1) + spaceYPop*kk, panelWidth, panelHeight],...
        'parent',             f,...
        'title',              'Seasonal Dummy Options',...
        'visible',            'off');
    
    uicontrol(...
        'units',                  'normalized',...
        'position',               [startTXP, heightPopP*(ff-1) + spaceYPopP*ff + extraP, widthTP, heightTP],...
        'parent',                 uip3,...
        'style',                  'text',...
        'horizontalAlignment',    'left',...
        'string',                 'Select type');
    types = {'Uncentered','Centered'};
    gui.pop3 = uicontrol(...
        'units',              'normalized',...
        'position',           [startPopXP, heightPopP*(ff-1) + spaceYPopP*ff, widthPopP, heightPopP],...
        'parent',             uip3,...
        'background',         [1 1 1],...
        'style',              'popupmenu',...
        'Interruptible',      'off',...
        'string',             types,...
        'value',              1);
    
    % Calculate button
    %--------------------------------------------------------------
    buttonHeight = 0.0667;
    buttonWidth  = 0.3;
    buttonXLoc   = 0.5 - buttonWidth/2;
    buttonYLoc   = (heightPop*(kk-1) + spaceYPop*kk)/2 - buttonHeight/2;
    
    uicontrol(...
              'units',              'normalized',...
              'position',           [buttonXLoc, buttonYLoc, buttonWidth, buttonHeight],...
              'parent',             f,...
              'style',              'pushbutton',...
              'Interruptible',      'off',...
              'busyAction',         'cancel',...
              'string',             'Calculate',...
              'callback',           @gui.calculateCallback);
       
    % Assign panels
    %--------------------------------------------------------------
    gui.varDummyPanel      = uip2;
    gui.timeDummyPanel     = uip1;
    gui.seasonalDummyPanel = uip3;
          
    % Make it visible
    %--------------------------------------------------------------
    set(f,'visible','on');
    
end
