function makeGUI(gui)
% Syntax:
%
% makeGUI(gui)
%
% Description:
%
% Part of DAG.
% 
% Written by Kenneth Sæterhagen Paulsen

% Copyright (c) 2021, Kenneth Sæterhagen Paulsen

    % Create a window to let the user select method
    %------------------------------------------------------
    if isa(gui.parent,'nb_GUI')
        name = [gui.parent.guiName ': Autocorrelation:'];
    else
        name =  'Autocorrelation:';
    end
    
    currentMonitor    = nb_getCurrentMonitor();
    defaultBackground = get(0,'defaultUicontrolBackgroundColor');
    main = figure('visible',        'off',...
                  'units',          'characters',...
                  'position',       [65   15  70   35],...
                  'Color',          defaultBackground,...
                  'name',           name,...
                  'numberTitle',    'off',...
                  'dockControls',   'off',...
                  'menuBar',        'None',...
                  'toolBar',        'None',...
                  'windowstyle',    'modal');
    gui.figure = main;
    nb_moveFigureToMonitor(main,currentMonitor,'center');
   
    % Positions
    ySpace = 0.02;
    xSpace = 0.05;
    width  = 0.4;
    height = 0.05;
    textHeight = 0.047;
    boxStart = xSpace + width + xSpace;
    yStart = 1 - 7*(ySpace + height) - ySpace;
    ylevel1 = yStart + ySpace + height;
    ylevel2 = ylevel1 + ySpace + height;
    ylevel3 = ylevel2 + ySpace + height;
    ylevel4 = ylevel3 + ySpace + height;
    ylevel5 = ylevel4 + ySpace + height;
    ylevel6 = ylevel5 + ySpace + height;
    panelHeight = 0.38;
    panelWidth  = 1-xSpace*2;
    yPanelStart = yStart - panelHeight - ySpace;
    
    uicontrol(gui.figure,...
        'units',                'normal',...
        'position',             [xSpace ylevel6 width textHeight],...
        'style',                'text',...
        'horizontalAlignment',  'left',...
        'string',               'Start date:');
    dat = dates(gui.data);
    gui.startDateBox = uicontrol(gui.figure,...
        'units',                'normal',...
        'position',             [boxStart ylevel6 width height],...
        'style',                'popupmenu',...
        'background',           [1 1 1],...
        'string',               dat,...
        'value',                1);
    
    uicontrol(gui.figure,...
        'units',                'normal',...
        'position',             [xSpace ylevel5 width textHeight],...
        'style',                'text',...
        'horizontalAlignment',  'left',...
        'string',               'End date:');
    gui.endDateBox = uicontrol(gui.figure,...
        'units',                'normal',...
        'position',             [boxStart ylevel5 width height],...
        'style',                'popupmenu',...
        'background',           [1 1 1],...
        'string',               dat,...
        'value',                length(dat));
    
    uicontrol(gui.figure,...
        'units',                'normal',...
        'position',             [xSpace ylevel4 width textHeight],...
        'style',                'text',...
        'horizontalAlignment',  'left',...
        'string',               'Variable(s):');
    vars = [{'All'},gui.data.variables];
    gui.variableBox = uicontrol(gui.figure,...
        'units',                'normal',...
        'position',             [boxStart ylevel4 width height],...
        'style',                'popupmenu',...
        'background',           [1 1 1],...
        'string',               vars);
    
    uicontrol(gui.figure,...
        'units',                'normal',...
        'position',             [xSpace ylevel3 width textHeight],...
        'style',                'text',...
        'horizontalAlignment',  'left',...
        'string',               'Choose type:');
    types = {'Sample autocorrelation','Partial autocorrelation'};
    gui.typeBox = uicontrol(gui.figure,...
        'units',                'normal',...
        'position',             [boxStart ylevel3 width height],...
        'style',                'popupmenu',...
        'background',           [1 1 1],...
        'string',               types);
    uicontrol(gui.figure,...
        'units',                'normal',...
        'position',             [xSpace ylevel1 width textHeight],...
        'style',                'text',...
        'horizontalAlignment',  'left',...
        'string',               'Choose CI method:');
    methods = {'Asymptotic',...
               'Parametric Bootstrap',...
               'Bootstrap',...
               'Block bootstrap',...
               'Random length block bootstrap',...
               'Wild bootstrap',...
               'Wild block bootstrap',...
               'Copula bootstrap'};
    gui.methodBox = uicontrol(gui.figure,...
        'units',                'normal',...
        'position',             [boxStart ylevel1 width height],...
        'style',                'popupmenu',...
        'background',           [1 1 1],...
        'string',               methods,...
        'callback',             @gui.popupCallback);
      
    uicontrol(gui.figure,...
        'units',                'normal',...
        'position',             [xSpace ylevel2 width textHeight],...
        'style',                'text',...
        'horizontalAlignment',  'left',...
        'string',       'Choose number of lags:');
    gui.nLagsBox = uicontrol(gui.figure,...
        'units',                'normal',...
        'position',             [boxStart ylevel2 width height],...
        'style',                'edit',...
        'background',           [1 1 1],...
        'string',               '1');
    
    uicontrol(gui.figure,...
        'units',                'normal',...
        'position',             [xSpace yStart width textHeight],...
        'style',                'text',...
        'horizontalAlignment',  'left',...
        'string',               'Choose alpha value:');
    gui.alfaBox = uicontrol(gui.figure,...
        'units',                'normal',...
        'position',             [boxStart yStart width height],...
        'style',                'edit',...
        'background',           [1 1 1],...
        'string',               '0.05');
    
    % Create parametric bootstrap options panel
    ySpace = 0.08;
    height2 = 0.15;
    textHeight2 = 0.111;
    yStart = 1 - 5*(ySpace + height2);
    ylevel1 = yStart + ySpace + height2;
    ylevel2 = ylevel1 + ySpace + height2;
    ylevel3 = ylevel2 + ySpace + height2;
    ylevel4 = ylevel3 + ySpace + height2;
    
    optnPanel = uipanel(gui.figure,...
        'units',                'normal',...
        'position',             [xSpace yPanelStart panelWidth panelHeight],...
        'title',                'Parametric Bootstrap Options');
    
    uicontrol(optnPanel,...
        'units',                'normal',...
        'position',             [xSpace ylevel4 width textHeight2],...
        'style',                'text',...
        'horizontalAlignment',  'left',...
        'string',               'Max AR:');
    gui.maxARBox = uicontrol(optnPanel,...
        'units',                'normal',...
        'position',             [boxStart ylevel4 width height2],...
        'style',                'edit',...
        'background',           [1 1 1],...
        'enable',               'off',...
        'string',               '3');
    uicontrol(optnPanel,...
        'units',                'normal',...
        'position',             [xSpace ylevel3 width textHeight2],...
        'style',                'text',...
        'horizontalAlignment',  'left',...
        'string',               'Max MA:');
    gui.maxMABox = uicontrol(optnPanel,...
        'units',                'normal',...
        'position',             [boxStart ylevel3 width height2],...
        'style',                'edit',...
        'background',           [1 1 1],...
        'enable',               'off',...
        'string',               '3');
    uicontrol(optnPanel,...
        'units',                'normal',...
        'position',             [xSpace ylevel2 width textHeight2],...
        'style',                'text',...
        'horizontalAlignment',  'left',...
        'string',               'Estimation algorithm:');
    algorithms = {'Hannan-Rissanen','Maximum Likelihood'};
    gui.algorithmBox = uicontrol(optnPanel,...
        'units',                'normal',...
        'position',             [boxStart ylevel2 width height2],...
        'style',                'popupmenu',...
        'background',           [1 1 1],...
        'enable',               'off',...
        'string',               algorithms);

    
    uicontrol(optnPanel,...
        'units',                'normal',...
        'position',             [xSpace ylevel1 width textHeight2],...
        'style',                'text',...
        'horizontalAlignment',  'left',...
        'string',               'Choose info criterion:');
    criteria = {'Akaike information criterion','Corrected Akaike information criterion',...
        'Modified Akaike information criterion','Schwarz information criterion',...
        'Modified Schwarz information criterion','Hannan and Quinn information criterion',...
        'Modified Hannan and Quinn information criterion'};
    gui.criteriaBox = uicontrol(optnPanel,...
        'units',                'normal',...
        'position',             [boxStart ylevel1 width height2],...
        'style',                'popupmenu',...
        'background',           [1 1 1],...
        'enable',               'off',...
        'string',               criteria);
    
    % Positions
    btnWidth = 0.3;
    btnHeight = 0.055;
    btnClearing = (yPanelStart-btnHeight)/2;
    start = (1-btnWidth)/2;
    uicontrol(main,...
        'style',        'pushbutton',...
        'units',        'normal',...
        'position',     [start btnClearing btnWidth btnHeight],...
        'string',       'Ok',...
        'busyAction',   'cancel',...
        'callback', 	@gui.makeGraphCallback);
    
    set(main,'visible','on');

end

