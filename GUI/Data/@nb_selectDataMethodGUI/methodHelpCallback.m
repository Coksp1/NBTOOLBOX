function methodHelpCallback(gui,~,~)
% Syntax:
%
% methodHelpCallback(gui,hObject,event)
%
% Description:
%
% Part of DAG.
% 
% Written by Kenneth Sæterhagen Paulsen

% Copyright (c) 2023, Kenneth Sæterhagen Paulsen

    % Get the method selected
    index  = get(gui.listbox,'Value');
    string = get(gui.listbox,'String');
    method = string{index};
    
    
    math = [nb_newLine(2), 'If you tick the select all option under the variable list, and also remove the postfix, ' nb_newLine...
            'the method will be called on all observations of the dataset and the variables ' nb_newLine...
            'will keep their names.'];
       
    % Make method GUI
    switch method
        
                
        case 'Add Column'
            
            text = 'Add a new column to existing cell object. ';
        
        case 'Add Postfix'
            
            text = 'Add a postfix to the selected variables. ';
            
            
        case 'Add Prefix'
            
            text = 'Add a prefix to the selected variables. ';
            
            
        case 'Add Row'
            
            text = 'Add a new row to existing cell object. ';
            
        case 'Append Dataset'
            
            text =  ['Appends a dataset to your current dataset. Your current dataset will be the ' nb_newLine...
                     'preferred dataset, which means that it will overwrite common observations and ' nb_newLine...
                     'variables between the two datasets. The observations and variables from the ' nb_newLine...
                     'chosen dataset that are not common will be added to your current dataset.' nb_newLine...
                     'Returns NaNs where there are missing observations.'];             
            
        case 'Arccosine'
            
           text = ['Creates new variables with the arccosine of the chosen variables, a postfix must ' nb_newLine...
                   'be added. The arccosine is defined as the inverse cosine.' math];
            
        case 'Arccosecant'
            
            text = ['Creates new variables with the arccosecant of the chosen variables, a postfix must ' nb_newLine...
                   'be added. The arccosecant is defined as the inverse cosecant.' math];
        
        case 'Arccotangent' 
            
            text = ['Creates new variables with the arccotangent of the chosen variables, a postfix must ' nb_newLine...
                    'be added. The arccotangent is defined as the inverse cotangent.' math];
                
        case 'Arcsecant' 
            
            text = ['Creates new variables with the arcsecant of the chosen variables, a postfix must ' nb_newLine...
                    'be added. The arcsecant is defined as the inverse secant.' math];
            
        case 'Arcsine'
            
            text = ['Creates new variables with the arcsine of the chosen variables, a postfix must ' nb_newLine...
                    'be added. The arcsine is defined as the inverse sine.' math];
            
        case 'Arctangent' 
            
            text = ['Creates new variables with the arcsine of the chosen variables, a postfix must ' nb_newLine...
                    'be added. The arctangent is defined as the inverse tangent.' math];
            
        case 'Assign NaN Values'
            
            text = 'Assigns NaN values in your chosen column to match observations from a chosen variable.';
                        
        case 'Average (object selection)'
            
            switch class(gui.parent.data)
                case 'nb_ts'
                    string = 'time';
                    extra  = ['You can choose between two outputs, time-series or cross-sectional. Time-series ' nb_newLine...
                              'will give you an output vector with the calculated average in each element of the vector. ' nb_newLine...
                              'The cross-sectional option will give you a single type with the calculated average.'];
                case 'nb_cs'
                    string = 'types';
                    extra  = 'You have only one option; cross-sectional.';
                case 'nb_data'
                    string = 'observations';
                    extra  = ['You can choose between two outputs, dimensionless or cross-sectional. Dimensionless ' nb_newLine...
                              'will give you an output vector with the calculated average in each element of the vector. ' nb_newLine...
                              'The cross-sectional option will give you a single type with the calculated average.'];
            end
            
            text = ['Takes the arithmetic average of all elements in the dimension you choose. ' nb_newLine...
                    'Dimension 1 is over ' string ', dimension 2 is over variables and dimension 3 over pages. ' nb_newLine...
                    extra];  
           
        case 'Average (series selection)'
            
            type = 'average';
            switch class(gui.parent.data)
                case {'nb_ts','nb_data'}
                    dim1  = ['- Observations: Calculates the ' type ' over observations. If postfix is given it will add ' nb_newLine...
                              'new series with all non-nan observations of all the selected variables set to the ' type '. If ' nb_newLine...
                              'postfix is empty and the all button is ticked on you will assign the calculated ' type ' to ' nb_newLine...
                              'all observations of each variable (Which is not nan). The calculation are done seperatly over ' nb_newLine...
                              'each page. By using the start obs and end obs you can select over which time period to calculate ' nb_newLine...
                              'the ' type '.'];
                    dim2  = ['- Variables: Calculates the ' type ' over variables. If the all button is not ticked it will add a ' nb_newLine...
                              'new series with the ' type ' over the selected variables (Ignoring nan-values). Select the variables ' nb_newLine...
                              'you want to calculate the ' type ' over in the variables selection list. Tick the all button to ' nb_newLine...
                              'calculate ' type ' over all variables and assign the calculated ' type ' to all existing variables. '  nb_newLine...
                              'All nan observations are not set to the ' type '. The calculation are done seperatly over each observation ' nb_newLine...
                              'and page.'];
                    dim3  = ['- Pages: Calculates the ' type ' over pages. If the all button is not ticked it will return only one ' nb_newLine...
                              'page with the ' type ' over the selected pages (Ignoring nan-values). Tick the all button to ' nb_newLine...
                              'calculate ' type ' over all pages and assign the calculated ' type ' to all existing pages. All nan '  nb_newLine...
                              'observations are not set to the ' type '. The calculation are done seperatly over each observation and ' nb_newLine ...
                              'variable.'];
                case 'nb_cs'
                    dim1  = ['- Types: Calculates the ' type ' over all types. If postfix is given it will add new series ' nb_newLine...
                              'with all non-nan observations of all the selected variables set to the ' type '. If postfix is ' nb_newLine...
                              'empty and the all button is ticked on you will assign the calculated ' type ' to all types ' nb_newLine...
                              'of each variable (Which is not nan). The calculation are done seperatly over each page.'];
                    dim2  = ['- Variables: Calculates the ' type ' over variables. If the all button is not ticked it will add a ' nb_newLine...
                              'new series with the ' type ' over the selected variables (Ignoring nan-values). Select the variables ' nb_newLine...
                              'you want to calculate the ' type ' over in the variables selection list. Tick the all button to ' nb_newLine...
                              'calculate ' type ' over all variables and assign the calculated ' type ' to all existing variables. '  nb_newLine...
                              'All nan observations are not set to the ' type '. The calculation are done seperatly over each type ' nb_newLine...
                              'and page.'];
                    dim3  = ['- Pages: Calculates the ' type ' over pages. If the all button is not ticked it will return only one ' nb_newLine...
                              'page with the ' type ' over the selected pages (Ignoring nan-values). Tick the all button to ' nb_newLine...
                              'calculate ' type ' over all pages and assign the calculated ' type ' to all existing pages. All nan '  nb_newLine...
                              'observations are not set to the ' type '. The calculation are done seperatly over each type and ' nb_newLine ...
                              'variable.'];
            end
            
            text = ['Takes the arithmetic average over all elements in the dimension you choose. ' nb_newLine...
                    'The options will depend on the dimension you calculate the ' type ' over:' nb_newLine nb_newLine...
                    dim1 nb_newLine nb_newLine dim2 nb_newLine nb_newLine dim3];  
                
        case 'Band-Pass Filter'
            
            text = ['This method let you use the Band-Pass filter to detrend data. The one-sided option ' nb_newLine...
                    'uses only past observations. '];
                        
        case 'Convert'
            
            text = ['Converts the frequency of the time-series. The select frequency-option allows ' nb_newLine...
                    'you to choose what frequency you want in the data. The methods option allows ' nb_newLine...
                    'you to choose how you want the data at the new frequency to be calculated. ' nb_newLine(2)...
                    'From high to low frequency: ' nb_newLine(2)...
                    'Average: Takes the averages over the subperiods.' nb_newLine...
                    'Discrete: Takes last observation in each subperiod.' nb_newLine...
                    'First: Takes first observation in each subperiod.' nb_newLine...
                    'Max: Takes takes maximal value over the subperiods.' nb_newLine,...
                    'Min: Takes sums over the subperiods.' nb_newLine(2)...
                    'From low frequency to high:' nb_newLine(2)...
                    'Linear: Linear interpolation. ' nb_newLine,...
                    'Cubic: Shape-preserving piecewise cubic interpolation.' nb_newLine,...
                    'Spline: Piecewice cubic spline interpolation.' nb_newLine,...
                    'None: No interpolation. All data in between is given by NaNs' nb_newLine...
                    'Fill: No interpolation. All periods of the higher frequency get the same value ' nb_newLine...
                    'as that of the higher frequency.' nb_newLine(2)...
                    'Include Partial periods - This option allows you to include the last period ' nb_newLine...
                    'even if it is not yet finished.' nb_newLine(2)...
                    'Rename prefix - This option changes the prefixes of the variable names. ' nb_newLine...
                    'E.g. if you convert from the frequency 12 to 4 the prefixes of the variable ' nb_newLine...
                    'names changes from "MUA" to "QUA", if the prefix exist.'];
            
            
        case 'Convert to Cell Object'
            
            text = 'Convert a time-series, cross-sectional or dimensionless dataset to a cell object';
                
            
        case 'Cosine'
            
            text = ['This method creates new variables with the cosine of the chosen variables. A postfix must ' nb_newLine...
                    'be added. ' math];
                      
        case 'Cosecant' 
            
            text = ['This method creates new variables with the cosecant of the chosen variables. A postfix must ' nb_newLine...
                    'be added. ' math'];
            
        case 'Cotangent' 
            
            text = ['This method creates new variables with the cotangent of the chosen variables. A postfix must ' nb_newLine...
                    'be added. ' math'];
            
        case 'Create Dummy Variable'
            
            text = ['This methods creates dummy variables. Choose whether you want a time related' nb_newLine...
                    'dummy or a variable related dummy.'];
                        
        case 'Create Variable'
            
            text = ['This method let you create a new variable. E.g. Var1/Var2 or rand(10,1). You can ' nb_newLine...
                    'also assign the name of the new variable.'];
                        
        case 'Create Type'
          
            text = 'This method let you create a new type. ';
                     
        case 'Delete Variables'
            
            text = 'This method let you choose a variable from you data set and delete it. ';
            
        case 'Delete Types'
            
            text = 'This metho let you choose a type and delete it.';
                   
        case 'Detrend'
            
           text = ['This method let you detrend using two different approaches, linear or mean. ' nb_newLine...
                   'The one-sided option allows you to use only past observations. '];
                       
        case 'Divide' 
            
            text = ['This method let you divide chosen variables with the desired value. ' nb_newLine...
                    'It will return new variables, where the choosen postfix is added ', math]; 
            
        case 'Easter Dummy'
            
            text = ['This method let you add a easter dummy variable to your dataset.' nb_newLine...
                    'The name of this variable will be ''easterDummy''. The greedy ' nb_newLine...
                    'option may be tick on to only return a dummy for the month when ' nb_newLine...
                    'Easter Sunday occurs, otherwise it will return a dummy for all ' nb_newLine...
                    'months where the easter week is part of (i.e. may overlap different ' nb_newLine...
                    'months).'];
                
        case 'Estimate distribution'
            
            text = ['This method let you estimate distributions of the time-series. Caution: ' nb_newLine...
                    'this method will remove all NaN values. ' nb_newLine(2)...
                    'Estimator: Choose between maximum likelihood, methods of moments or normal ' nb_newLine...
                    'kernel density estimation. ' nb_newLine(2)...
                    'Type: The type of distribution to estimate. ' nb_newLine(2)...
                    'Dimension: The dimension of the data to estimate the densities over. '];
                        
        case 'Expand Window'
            
            text = ['This method let you expand the length of you time-series data. Choose a start date and' nb_newLine... %Interval fixed
                    'an end date, and the input you want in the new elements of your data set. ' nb_newLine(2)...
                    'You can choose between the following types of data: ' nb_newLine(2)...
                    'NaN: Expanded data is all NaN. ' nb_newLine...
                    '0: Expanded data is all zeros. ' nb_newLine...
                    '1: Expanded data is all ones. ' nb_newLine...
                    'Rand: Expanded data is all random numbers. ' nb_newLine...
                    'First/Last observation: Expand the data with first observation (before) and last ' nb_newLine...
                    'observation after. '];
                       
        case 'Expand By Periods'
            
            text = ['This method let you expand the dataset with a fixed number of observations, so that if you ' nb_newLine...
                    'receive more data, the Expand By Periods-method will expand correspoondingly.' nb_newLine(2)...
                    'First choose the number of observations that you want your dataset to be expanded with. ' nb_newLine(2)...
                    'Then you can choose between the following types of data: ' nb_newLine(2)...
                    'NaN: Expanded data is all NaN. ' nb_newLine...
                    '0: Expanded data is all zeros. ' nb_newLine...
                    '1: Expanded data is all ones. ' nb_newLine...
                    'Rand: Expanded data is all random numbers. ' nb_newLine...
                    'First/Last observation: Expand the data with first observation (before) and last ' nb_newLine...
                    'observation after. '];
           
        
        case 'Exponential'
            
            text = ['This method creates new variables with the exponential of the chosen variables. A postfix must ' nb_newLine...
                    'be added. ' math];
            
        case 'Extrapolate'    
            
            text = ['This method extrapolates the last observation of one variable to the wanted data. ' nb_newLine...
                    'This method will only work on a single paged time-series. ' nb_newLine(2)...
                    'Methods ' nb_newLine(2)...
                    'End: Extrapolate series by using the last observation in each series, i.e. random ' nb_newLine...
                    'walk forecast. ' nb_newLine...
                    'Copula: This approach tries to estimate the unconditional marginal distribution of ' nb_newLine...
                    'each series in the dataset and the (auto)correlation structure that describe the ' nb_newLine...
                    'connection between these series. Some series may have more observations than others! ' nb_newLine...
                    'Caution: This method works when the unconditional distribution from which the series ' nb_newLine...
                    'are assumed to be drawn are the same over time. E.g. the series must have the same ' nb_newLine...
                    'volatility over the period. The second assumption is that all the series are stationary. ' nb_newLine...
                    'Use the unit root method to check this. ' nb_newLine(2)...
                    'AR: extrapolate each series individually using a fitted AR-model. ' nb_newLine(2)...
                    'To date: You can either extrapolate to the given date. If the date is before the end date ' nb_newLine...
                    'of the given variable, no change will be made and with no warning. Or you can choose ' nb_newLine...
                    'how many number of periods to extrapolate. '];
            
            
        case 'Fill NaN'
            
            text = 'This method let you fill missing observations, typically weekends when you have daily data. ';
                               
        case 'Growth' 
            
            text = ['This method let you calculate the growth of chosen variables for each period.  ' nb_newLine...
                    'It will return new variables, where the choosen postfix is added | (obs2/obs1)-1 |' math];
                
        case 'Growth (%)' 
            
            text = ['This method let you calculate the growth of chosen variables for each period, and multiplies the values ' nb_newLine...
                    'by 100. It will return new variables, where the choosen postfix is added | ((obs2/obs1)-1)*100 |' math];  
            
        case 'HP-Filter'
            
            text = ['By using this method you can use the HP-filter. Lambda is a smoothing parameter.  ' nb_newLine...
                    'The one sided option uses only past observations.'];
                        
        case 'Interpolate'
            
            text = ['This method interpolate the data. Will discard leading and trailing NaN values. ' nb_newLine(2)...
                    'Linear: Linear interpolation. ' nb_newLine...
                    'Nearest: nearest neighbour interpolation. ' nb_newLine...
                    'Spline: piecewise cubic spline interpolation. ' nb_newLine...
                    'Pchip: shape-preserving piecewise cubic interpolation. ' nb_newLine...
                    'Cubic: Same as pchip. ' nb_newLine...
                    'v5cubic: The cubic interpolation from MATLAB 5, which does not extrapolate and ' nb_newLine...
                    'uses "spline" if X is not equally spaced. '
                    ];
                      
        case 'Lag' 
            
            text = ['This method let you lag the chosen variables by the number of periods that you choose. ' nb_newLine...
                    'It will return new variables, where the choosen postfix is added, and returns NaN before the lagged values.' math];
                        
        case 'Lead'
            
            text = ['This method let you lead the chosen variable by the number of periods that you choose. ' nb_newLine...
                    'It will return new variables, where the choosen postfix is added, and returns NaN after the last value. ' math];
                        
        case 'Log' 
            
            text = ['This method takes the natural logarithm of the chosen variables. It creates new variables with the log ' nb_newLine...
                    'of the chosen variables, and a postfix must be added. ' math];
                        
        case 'Log Difference' 
            
            text = ['This method calculates growth using the natural logarithmic difference. ' nb_newLine...
                    'You can set the number of periods that you want the growth to be calculated over.' nb_newLine...
                    'It will return new variables where the postfix is added. ' nb_newLine...
                    '|log(obs_t)-log(obs_t-p), where p is the chosen period. | ' math];
                        
        case 'Log Difference (%)' 
            
            text = ['This method calculates growth using the natural logarithmic difference, and then multiplying ' nb_newLine...
                    'by 100. You can set the number of periods that you want the growth to be calculated over.' nb_newLine...
                    'It will return new variables where the postfix is added. ' nb_newLine...
                    '|(log(obs_t)-log(obs_t-p))*100, where p is the chosen period. | ' math];
                
        case 'Max'
            
            type = 'max';
            switch class(gui.parent.data)
                case {'nb_ts','nb_data'}
                    dim1  = ['- Observations: Calculates the ' type ' over observations. If postfix is given it will add ' nb_newLine...
                              'new series with all non-nan observations of all the selected variables set to the ' type '. If ' nb_newLine...
                              'postfix is empty and the all button is ticked on you will assign the calculated ' type ' to ' nb_newLine...
                              'all observations of each variable (Which is not nan). The calculation are done seperatly over ' nb_newLine...
                              'each page. By using the start obs and end obs you can select over which time period to calculate ' nb_newLine...
                              'the ' type '.'];
                    dim2  = ['- Variables: Calculates the ' type ' over variables. If the all button is not ticked it will add a ' nb_newLine...
                              'new series with the ' type ' over the selected variables (Ignoring nan-values). Select the variables ' nb_newLine...
                              'you want to calculate the ' type ' over in the variables selection list. Tick the all button to ' nb_newLine...
                              'calculate ' type ' over all variables and assign the calculated ' type ' to all existing variables. '  nb_newLine...
                              'All nan observations are not set to the ' type '. The calculation are done seperatly over each observation ' nb_newLine...
                              'and page.'];
                    dim3  = ['- Pages: Calculates the ' type ' over pages. If the all button is not ticked it will return only one ' nb_newLine...
                              'page with the ' type ' over the selected pages (Ignoring nan-values). Tick the all button to ' nb_newLine...
                              'calculate ' type ' over all pages and assign the calculated ' type ' to all existing pages. All nan '  nb_newLine...
                              'observations are not set to the ' type '. The calculation are done seperatly over each observation and ' nb_newLine ...
                              'variable.'];
                case 'nb_cs'
                    dim1  = ['- Types: Calculates the ' type ' over all types. If postfix is given it will add new series ' nb_newLine...
                              'with all non-nan observations of all the selected variables set to the ' type '. If postfix is ' nb_newLine...
                              'empty and the all button is ticked on you will assign the calculated ' type ' to all types ' nb_newLine...
                              'of each variable (Which is not nan). The calculation are done seperatly over each page.'];
                    dim2  = ['- Variables: Calculates the ' type ' over variables. If the all button is not ticked it will add a ' nb_newLine...
                              'new series with the ' type ' over the selected variables (Ignoring nan-values). Select the variables ' nb_newLine...
                              'you want to calculate the ' type ' over in the variables selection list. Tick the all button to ' nb_newLine...
                              'calculate ' type ' over all variables and assign the calculated ' type ' to all existing variables. '  nb_newLine...
                              'All nan observations are not set to the ' type '. The calculation are done seperatly over each type ' nb_newLine...
                              'and page.'];
                    dim3  = ['- Pages: Calculates the ' type ' over pages. If the all button is not ticked it will return only one ' nb_newLine...
                              'page with the ' type ' over the selected pages (Ignoring nan-values). Tick the all button to ' nb_newLine...
                              'calculate ' type ' over all pages and assign the calculated ' type ' to all existing pages. All nan '  nb_newLine...
                              'observations are not set to the ' type '. The calculation are done seperatly over each type and ' nb_newLine ...
                              'variable.'];
            end
            
            text = ['Find the max over all (not nan) elements in the dimension you choose. ' nb_newLine...
                    'The options will depend on the dimension you calculate the ' type ' over:' nb_newLine nb_newLine...
                    dim1 nb_newLine nb_newLine dim2 nb_newLine nb_newLine dim3];          
                
        case 'Median (object selection)' 
            
             switch class(gui.parent.data)
                case 'nb_ts'
                    string = 'time';
                    extra  = ['You can choose between two outputs, time-series or cross-sectional. Time-series ' nb_newLine...
                              'will give you an output vector with the calculated average in each element of the vector. ' nb_newLine...
                              'The cross-sectional option will give you a single type with the calculated average.'];
                case 'nb_cs'
                    string = 'types';
                    extra  = 'You have only one option; cross-sectional.';
                case 'nb_data'
                    string = 'observations';
                    extra  = ['You can choose between two outputs, dimensionless or cross-sectional. Dimensionless ' nb_newLine...
                              'will give you an output vector with the calculated average in each element of the vector. ' nb_newLine...
                              'The cross-sectional option will give you a single type with the calculated average.'];
             end
            
             text=['Takes the median of all elements in the dimension. Dimension 1 is over ' string ', dimension 2 ' nb_newLine...
                   'is over variables and dimension 3 is over pages' extra];
             
        case 'Median (series selection)'
            
            type = 'median';
            switch class(gui.parent.data)
                case {'nb_ts','nb_data'}
                    dim1  = ['- Observations: Calculates the ' type ' over observations. If postfix is given it will add ' nb_newLine...
                              'new series with all non-nan observations of all the selected variables set to the ' type '. If ' nb_newLine...
                              'postfix is empty and the all button is ticked on you will assign the calculated ' type ' to ' nb_newLine...
                              'all observations of each variable (Which is not nan). The calculation are done seperatly over ' nb_newLine...
                              'each page. By using the start obs and end obs you can select over which time period to calculate ' nb_newLine...
                              'the ' type '.'];
                    dim2  = ['- Variables: Calculates the ' type ' over variables. If the all button is not ticked it will add a ' nb_newLine...
                              'new series with the ' type ' over the selected variables (Ignoring nan-values). Select the variables ' nb_newLine...
                              'you want to calculate the ' type ' over in the variables selection list. Tick the all button to ' nb_newLine...
                              'calculate ' type ' over all variables and assign the calculated ' type ' to all existing variables. '  nb_newLine...
                              'All nan observations are not set to the ' type '. The calculation are done seperatly over each observation ' nb_newLine...
                              'and page.'];
                    dim3  = ['- Pages: Calculates the ' type ' over pages. If the all button is not ticked it will return only one ' nb_newLine...
                              'page with the ' type ' over the selected pages (Ignoring nan-values). Tick the all button to ' nb_newLine...
                              'calculate ' type ' over all pages and assign the calculated ' type ' to all existing pages. All nan '  nb_newLine...
                              'observations are not set to the ' type '. The calculation are done seperatly over each observation and ' nb_newLine ...
                              'variable.'];
                case 'nb_cs'
                    dim1  = ['- Types: Calculates the ' type ' over all types. If postfix is given it will add new series ' nb_newLine...
                              'with all non-nan observations of all the selected variables set to the ' type '. If postfix is ' nb_newLine...
                              'empty and the all button is ticked on you will assign the calculated ' type ' to all types ' nb_newLine...
                              'of each variable (Which is not nan). The calculation are done seperatly over each page.'];
                    dim2  = ['- Variables: Calculates the ' type ' over variables. If the all button is not ticked it will add a ' nb_newLine...
                              'new series with the ' type ' over the selected variables (Ignoring nan-values). Select the variables ' nb_newLine...
                              'you want to calculate the ' type ' over in the variables selection list. Tick the all button to ' nb_newLine...
                              'calculate ' type ' over all variables and assign the calculated ' type ' to all existing variables. '  nb_newLine...
                              'All nan observations are not set to the ' type '. The calculation are done seperatly over each type ' nb_newLine...
                              'and page.'];
                    dim3  = ['- Pages: Calculates the ' type ' over pages. If the all button is not ticked it will return only one ' nb_newLine...
                              'page with the ' type ' over the selected pages (Ignoring nan-values). Tick the all button to ' nb_newLine...
                              'calculate ' type ' over all pages and assign the calculated ' type ' to all existing pages. All nan '  nb_newLine...
                              'observations are not set to the ' type '. The calculation are done seperatly over each type and ' nb_newLine ...
                              'variable.'];
            end
            
            text = ['Takes the median over all elements in the dimension you choose. ' nb_newLine...
                    'The options will depend on the dimension you calculate the ' type ' over:' nb_newLine nb_newLine...
                    dim1 nb_newLine nb_newLine dim2 nb_newLine nb_newLine dim3];        
               
        case 'Merge'
            
            text = ['This method let you merge your current data set with another. If there are common ' nb_newLine...
                    'with conflicting observations of some variables you must choose which of the variables ' nb_newLine...
                    'you want to keep in your new data set. '];
                     
        case 'Min'
            
            type = 'min';
            switch class(gui.parent.data)
                case {'nb_ts','nb_data'}
                    dim1  = ['- Observations: Calculates the ' type ' over observations. If postfix is given it will add ' nb_newLine...
                              'new series with all non-nan observations of all the selected variables set to the ' type '. If ' nb_newLine...
                              'postfix is empty and the all button is ticked on you will assign the calculated ' type ' to ' nb_newLine...
                              'all observations of each variable (Which is not nan). The calculation are done seperatly over ' nb_newLine...
                              'each page. By using the start obs and end obs you can select over which time period to calculate ' nb_newLine...
                              'the ' type '.'];
                    dim2  = ['- Variables: Calculates the ' type ' over variables. If the all button is not ticked it will add a ' nb_newLine...
                              'new series with the ' type ' over the selected variables (Ignoring nan-values). Select the variables ' nb_newLine...
                              'you want to calculate the ' type ' over in the variables selection list. Tick the all button to ' nb_newLine...
                              'calculate ' type ' over all variables and assign the calculated ' type ' to all existing variables. '  nb_newLine...
                              'All nan observations are not set to the ' type '. The calculation are done seperatly over each observation ' nb_newLine...
                              'and page.'];
                    dim3  = ['- Pages: Calculates the ' type ' over pages. If the all button is not ticked it will return only one ' nb_newLine...
                              'page with the ' type ' over the selected pages (Ignoring nan-values). Tick the all button to ' nb_newLine...
                              'calculate ' type ' over all pages and assign the calculated ' type ' to all existing pages. All nan '  nb_newLine...
                              'observations are not set to the ' type '. The calculation are done seperatly over each observation and ' nb_newLine ...
                              'variable.'];
                case 'nb_cs'
                    dim1  = ['- Types: Calculates the ' type ' over all types. If postfix is given it will add new series ' nb_newLine...
                              'with all non-nan observations of all the selected variables set to the ' type '. If postfix is ' nb_newLine...
                              'empty and the all button is ticked on you will assign the calculated ' type ' to all types ' nb_newLine...
                              'of each variable (Which is not nan). The calculation are done seperatly over each page.'];
                    dim2  = ['- Variables: Calculates the ' type ' over variables. If the all button is not ticked it will add a ' nb_newLine...
                              'new series with the ' type ' over the selected variables (Ignoring nan-values). Select the variables ' nb_newLine...
                              'you want to calculate the ' type ' over in the variables selection list. Tick the all button to ' nb_newLine...
                              'calculate ' type ' over all variables and assign the calculated ' type ' to all existing variables. '  nb_newLine...
                              'All nan observations are not set to the ' type '. The calculation are done seperatly over each type ' nb_newLine...
                              'and page.'];
                    dim3  = ['- Pages: Calculates the ' type ' over pages. If the all button is not ticked it will return only one ' nb_newLine...
                              'page with the ' type ' over the selected pages (Ignoring nan-values). Tick the all button to ' nb_newLine...
                              'calculate ' type ' over all pages and assign the calculated ' type ' to all existing pages. All nan '  nb_newLine...
                              'observations are not set to the ' type '. The calculation are done seperatly over each type and ' nb_newLine ...
                              'variable.'];
            end
            
            text = ['Find the minimum over all (not nan) elements in the dimension you choose. ' nb_newLine...
                    'The options will depend on the dimension you calculate the ' type ' over:' nb_newLine nb_newLine...
                    dim1 nb_newLine nb_newLine dim2 nb_newLine nb_newLine dim3];          
                
        case 'Minus' 
           
            text = ['This method let you subtract a chosen value from one or more variables. ' nb_newLine...
                    'It returns new variables where the postfix is added. ', math];
                        
        case 'Mode (object selection)' 
            
             switch class(gui.parent.data)
                case 'nb_ts'
                    string = 'time';
                    extra  = ['You can choose between two outputs, time-series or cross-sectional. Time-series ' nb_newLine...
                              'will give you an output vector with the calculated average in each element of the vector. ' nb_newLine...
                              'The cross-sectional option will give you a single type with the calculated average.'];
                case 'nb_cs'
                    string = 'types';
                    extra  = 'You have only one option; cross-sectional.';
                case 'nb_data'
                    string = 'observations';
                    extra  = ['You can choose between two outputs, dimensionless or cross-sectional. Dimensionless ' nb_newLine...
                              'will give you an output vector with the calculated average in each element of the vector. ' nb_newLine...
                              'The cross-sectional option will give you a single type with the calculated average.'];
             end
            
            
            text= ['This method calculates the mode of each time-series. First you must choose over what dimension ' nb_newLine...
                   'you want to calculate the mode. Dimension 1 is over ' string ', dimension 2 is over variables and ' nb_newLine...
                   'dimension 3 is over pages. ' extra]; 
            
        case 'Mode (series selection)'
            
            type = 'mode';
            switch class(gui.parent.data)
                case {'nb_ts','nb_data'}
                    dim1  = ['- Observations: Calculates the ' type ' over observations. If postfix is given it will add ' nb_newLine...
                              'new series with all non-nan observations of all the selected variables set to the ' type '. If ' nb_newLine...
                              'postfix is empty and the all button is ticked on you will assign the calculated ' type ' to ' nb_newLine...
                              'all observations of each variable (Which is not nan). The calculation are done seperatly over ' nb_newLine...
                              'each page. By using the start obs and end obs you can select over which time period to calculate ' nb_newLine...
                              'the ' type '.'];
                    dim2  = ['- Variables: Calculates the ' type ' over variables. If the all button is not ticked it will add a ' nb_newLine...
                              'new series with the ' type ' over the selected variables (Ignoring nan-values). Select the variables ' nb_newLine...
                              'you want to calculate the ' type ' over in the variables selection list. Tick the all button to ' nb_newLine...
                              'calculate ' type ' over all variables and assign the calculated ' type ' to all existing variables. '  nb_newLine...
                              'All nan observations are not set to the ' type '. The calculation are done seperatly over each observation ' nb_newLine...
                              'and page.'];
                    dim3  = ['- Pages: Calculates the ' type ' over pages. If the all button is not ticked it will return only one ' nb_newLine...
                              'page with the ' type ' over the selected pages (Ignoring nan-values). Tick the all button to ' nb_newLine...
                              'calculate ' type ' over all pages and assign the calculated ' type ' to all existing pages. All nan '  nb_newLine...
                              'observations are not set to the ' type '. The calculation are done seperatly over each observation and ' nb_newLine ...
                              'variable.'];
                case 'nb_cs'
                    dim1  = ['- Types: Calculates the ' type ' over all types. If postfix is given it will add new series ' nb_newLine...
                              'with all non-nan observations of all the selected variables set to the ' type '. If postfix is ' nb_newLine...
                              'empty and the all button is ticked on you will assign the calculated ' type ' to all types ' nb_newLine...
                              'of each variable (Which is not nan). The calculation are done seperatly over each page.'];
                    dim2  = ['- Variables: Calculates the ' type ' over variables. If the all button is not ticked it will add a ' nb_newLine...
                              'new series with the ' type ' over the selected variables (Ignoring nan-values). Select the variables ' nb_newLine...
                              'you want to calculate the ' type ' over in the variables selection list. Tick the all button to ' nb_newLine...
                              'calculate ' type ' over all variables and assign the calculated ' type ' to all existing variables. '  nb_newLine...
                              'All nan observations are not set to the ' type '. The calculation are done seperatly over each type ' nb_newLine...
                              'and page.'];
                    dim3  = ['- Pages: Calculates the ' type ' over pages. If the all button is not ticked it will return only one ' nb_newLine...
                              'page with the ' type ' over the selected pages (Ignoring nan-values). Tick the all button to ' nb_newLine...
                              'calculate ' type ' over all pages and assign the calculated ' type ' to all existing pages. All nan '  nb_newLine...
                              'observations are not set to the ' type '. The calculation are done seperatly over each type and ' nb_newLine ...
                              'variable.'];
            end
            
            text = ['Takes the mode over all elements in the dimension you choose. ' nb_newLine...
                    'The options will depend on the dimension you calculate the ' type ' over:' nb_newLine nb_newLine...
                    dim1 nb_newLine nb_newLine dim2 nb_newLine nb_newLine dim3];        
               
        case 'Moving Average'
            
            text = ['This method calculates the moving average. It will return new variables with the calculated ' nb_newLine...
                    'values. A postfix must be choosen.' nb_newLine(2)...
                    'Backward: How many periods backward you want to include in your moving average ' nb_newLine...
                    'calculation ' nb_newLine...
                    'Forward: How many periods forward you want to include in your moving average ' nb_newLine...
                    'calculation,', math];
            
        case 'Moving Standard Deviation'
            
            text = ['This method calculates the moving standard deviation. It will return new variables with the ' nb_newLine...
                    'calculated values. A postfix must be choosen.' nb_newLine(2)...
                    'Backward: How many periods backward you want to include in your moving standard ' nb_newLine...
                    'deviation calculation' nb_newLine...
                    'Forward: How many periods forward you want to include in your moving standard ' nb_newLine...
                    'deviation calculation.', math];
                           
        case 'Multiplication' 
            
            text = ['This method let you multiply chosen variables with a scalar. It will return new variables ' nb_newLine...
                    'where the postfix is added. ', math];
           
        case 'Permute'
            
            text = ['This method permutes the data, i.e. switch the dimensions. E.g. You have time/types/observations in ' nb_newLine...
                    'the first dimension, variables over the second dimension and simulations over the third dimension. ' nb_newLine...
                    'Then this method will switch the simulations and variables. ' nb_newLine(2)...
                    'Caution: Will not work on linked datasets. '];
                       
        case 'Plus'
            
            text = ['This method let you add a number to the chosen variables. It will return new variables ' nb_newLine...
                    'where the chosen postfix is added. ', math];
                      
        case 'Power' 
            
            text = ['This method let raises the chosen variables to the wanted power. It will new variables ' nb_newLine...
                    'where the chosen postfix is added. ', math];
                        
        case 'Rebase'
            
            text = ['This method let you rebase you variables to a chosen level. ' nb_newLine(2)...
                    'First set the rebase date. This date will be the base date, and  ' nb_newLine...
                    'the corresponding observations to this date will be assigned the base value ' nb_newLine...
                    'that you set. ' nb_newLine...
                    'Then set the postfix that you want your new columns to have, and choose ' nb_newLine...
                    'what variables you want to use. '];
                       
        case 'Rename Page'
           
            text = 'This method let you rename the page.';
                  
        case 'Rename Type'
            
            text = 'This method let you rename the type. ';
                     
        case 'Re-order Datasets'
            
           text = 'Here you can re-order the datasets/page names as you want. ';      
                
        case 'Re-order Variables'
            
            text = ['Here you can re-order the variables as you want. This will break ' nb_newLine'...
                    'the automatic sorting of the variables if that where in place before.'];
                  
        case 'Re-order Types'  
            
            text = 'Here you can re-order the types as you want. ';
                        
        case 'Round'
            
            text = ['This method let you round your chosen variables to the closest multiplicative value ' nb_newLine...
                    'that you set. You must also choose the time interval, and if there are multiple ' nb_newLine...
                    'pages, choose which pages you want to include.'];
            
        case 'Rename Variable'
            
            text = ['This method let you rename chosen variables. ' nb_newLine(2)...
                   'First, choose if you want to rename a single variable or if you would like to make a change ' nb_newLine...
                   'to all of the variables. Then you can either: Set the new name of the variable you would like to ' nb_newLine...
                   'change. Or: You can change parts of every variable names. To to this, select "all variables". Then, ' nb_newLine...
                   'type in the part of the variables you would like to change, and end with a "*". E.g. Say you have ' nb_newLine...
                   'Var1, Var2, Var3. Then by selecting all and setting the identifier to "ar*" and the new name of the ' nb_newLine...
                   'variables to "ra", the new names of the variables should now be Vra1, Vra2, Vra3. '];
       
        
        case 'Secant' 
            
            text = ['Creates new variables with the secant of the chosen variables. A postfix must be added. ' math];
        
        case 'Smoothened growth'
            
            text = ['Calculates smoothened 12 or 6 months growth. Will only work on monthly data.' nb_newLine...
                    'Horizon 1: x(*) = ((x13+x14+x15)/(x1+x2+x3)-1)*100' nb_newLine...
                    'Horizon 2: x(*) = ((x7+x8+x9)/(x1+x2+x3)-1)*100'];
                       
        case 'Shrink To Last Observations'
            
            text =['This method let you shrink your dataset to the a given number of last observations. ' nb_newLine
                   'The rest of the observations will be removed from you dataset. '];
                   
        case 'Shrink Sample'
            
            text = ['This method shrinks the sample to be balanced for a selected number of variables. ' nb_newLine 
                    '(May tolerate trailing nan with the selected number of periods)'];
                       
        case 'Sine' 
            
            text = ['Creates new variables with the sine of the chosen variables. A postfix must be added. ', math];
                        
        case 'Sort'
           
            text = 'This method sorts the order of the data by either ascending og descendin order. ';
       
        case 'Sort Datasets'
            
            text = ['This method sorts the datasets alphabetically. This will not induce ' nb_newLine
                    'automatic sorting when adding new variables etc. going forward.'];
       
        
        case 'Sort Variables'
            
            text = ['This method sorts the variables alphabetically. This will also induce ' nb_newLine
                    'automatic sorting when adding new variables etc. going forward.'];
                        
        case 'Sort Types'  
            
            text = ['This method sorts the type alphabetically. This will not induce ' nb_newLine
                    'automatic sorting when adding new types etc. going forward.'];
          
        case 'Split Sample'
            
            text = ['This method splits your data set to the length that you choose. The dimension ' nb_newLine...
                    'of your spreadsheet will be nsteps x nvar x nobs. Use Ctrl + D to scroll one step ' nb_newLine...
                    'forward in your dataset, and Ctrl + E to scroll one step backward in your dataset. ' nb_newLine...
                    'This method can be used to construct the nedded input to recursive conditional ' nb_newLine...
                    'forecasting.'];
                    
        case 'Split Series'
            
            text = ['This method splits a chosen variable series. Choose the split date where you ' nb_newLine...
                    'want your series to be split. This will return a new variables with the data after ' nb_newLine...
                    'the split. If you tick the overlapping option, the old variable column will have the data ' nb_newLine...
                    'all the way until the split date, and NaNs thereafter. The new column will have ' nb_newLine...
                    'NaNs until the split date, and the original data thereafter. '];
              
        case 'Standard deviation (series selection)'
            
            type = 'standard deviation';
            switch class(gui.parent.data)
                case {'nb_ts','nb_data'}
                    dim1  = ['- Observations: Calculates the ' type ' over observations. If postfix is given it will add ' nb_newLine...
                              'new series with all non-nan observations of all the selected variables set to the ' type '. If ' nb_newLine...
                              'postfix is empty and the all button is ticked on you will assign the calculated ' type ' to ' nb_newLine...
                              'all observations of each variable (Which is not nan). The calculation are done seperatly over ' nb_newLine...
                              'each page. By using the start obs and end obs you can select over which time period to calculate ' nb_newLine...
                              'the ' type '.'];
                    dim2  = ['- Variables: Calculates the ' type ' over variables. If the all button is not ticked it will add a ' nb_newLine...
                              'new series with the ' type ' over the selected variables (Ignoring nan-values). Select the variables ' nb_newLine...
                              'you want to calculate the ' type ' over in the variables selection list. Tick the all button to ' nb_newLine...
                              'calculate ' type ' over all variables and assign the calculated ' type ' to all existing variables. '  nb_newLine...
                              'All nan observations are not set to the ' type '. The calculation are done seperatly over each observation ' nb_newLine...
                              'and page.'];
                    dim3  = ['- Pages: Calculates the ' type ' over pages. If the all button is not ticked it will return only one ' nb_newLine...
                              'page with the ' type ' over the selected pages (Ignoring nan-values). Tick the all button to ' nb_newLine...
                              'calculate ' type ' over all pages and assign the calculated ' type ' to all existing pages. All nan '  nb_newLine...
                              'observations are not set to the ' type '. The calculation are done seperatly over each observation and ' nb_newLine ...
                              'variable.'];
                case 'nb_cs'
                    dim1  = ['- Types: Calculates the ' type ' over all types. If postfix is given it will add new series ' nb_newLine...
                              'with all non-nan observations of all the selected variables set to the ' type '. If postfix is ' nb_newLine...
                              'empty and the all button is ticked on you will assign the calculated ' type ' to all types ' nb_newLine...
                              'of each variable (Which is not nan). The calculation are done seperatly over each page.'];
                    dim2  = ['- Variables: Calculates the ' type ' over variables. If the all button is not ticked it will add a ' nb_newLine...
                              'new series with the ' type ' over the selected variables (Ignoring nan-values). Select the variables ' nb_newLine...
                              'you want to calculate the ' type ' over in the variables selection list. Tick the all button to ' nb_newLine...
                              'calculate ' type ' over all variables and assign the calculated ' type ' to all existing variables. '  nb_newLine...
                              'All nan observations are not set to the ' type '. The calculation are done seperatly over each type ' nb_newLine...
                              'and page.'];
                    dim3  = ['- Pages: Calculates the ' type ' over pages. If the all button is not ticked it will return only one ' nb_newLine...
                              'page with the ' type ' over the selected pages (Ignoring nan-values). Tick the all button to ' nb_newLine...
                              'calculate ' type ' over all pages and assign the calculated ' type ' to all existing pages. All nan '  nb_newLine...
                              'observations are not set to the ' type '. The calculation are done seperatly over each type and ' nb_newLine ...
                              'variable.'];
            end
            
            text = ['Takes the standard deviation over all elements in the dimension you choose. ' nb_newLine...
                    'The options will depend on the dimension you calculate the ' type ' over:' nb_newLine nb_newLine...
                    dim1 nb_newLine nb_newLine dim2 nb_newLine nb_newLine dim3];         
                
        case 'Standardise'
            
            text = ['Standardises the variables by subtracting their mean and dividing by their ' nb_newLine...
                    'standard deviation. You can choose if you want to normalize by N-1 (default) or ' nb_newLine...
                    'by N. New variables will be added using the chosen postfix.', math];
            
        case 'Strip'
            
            text = 'This method let you set variables between two observations to NaN.  ';
           
            
        case 'Strip but last'
            
            text = ['This method sets all observations to a chosen variable to NaN, except ' nb_newLine...
                    'the last and a chosen number of periods back. '];
           
        case 'Subperiod average'
            
            text = ['Will for the last k periods (including the present) calculate the ' nb_newLine...
                    'cumulative sum and then divide by the amount of periods, which gives ' nb_newLine...
                    'you the average over those periods.'];
                
        case 'Subperiod sum' 
                
            text = 'Calculates the cumulative sum over the last k periods (including the present period)';    
            
        case 'Tangent' 
            
            text = ['Creates new variables with the tangent of the chosen variables. A postfix must be added. ', math];
                       
        case 'Transpose'
           
            text = ['This method interchange the types and variables dimensions of a ' nb_newLine...
                    'cross-sectional dataset'];
            
        case 'Unit Root'
            
            text = ['The unit root tests are used to test for non-stationarity of time-series. ' nb_newLine(2)...
                    'Augmented Dickey Fuller test ' nb_newLine(2)...
                    'Test for unit root in: ' nb_newLine...
                    'Choose the transformation of the tested variable. ' nb_newLine(2)...
                    'Include in test equation: ' nb_newLine...
                    'Choose the tested model ' nb_newLine(2)...
                    'Variable(s) ' nb_newLine...
                    'Select the variable to test. Choosing "all" will do the test for all' nb_newLine...
                    'variables individually. ' nb_newLine(2)...
                    'Start date:' nb_newLine...
                    'Start date of test sample. ' nb_newLine(2)...
                    'End date:' nb_newLine...
                    'End date of test sample.' nb_newLine(2)...
                    'Autmatic selection: ' nb_newLine...
                    'Tick to select lag length automatically using an information ' nb_newLine...
                    'criteria. ' nb_newLine(2)...
                    'Information criteria: ' nb_newLine...
                    'Here you can choose between six information criterias. ' nb_newLine...
                    'For more information on these, see the DAG User Manual.' nb_newLine(2)...
                    'Maximum: ' nb_newLine...
                    'Select the maximum tested lag lengths. ' nb_newLine(2)...
                    'User specified: ' nb_newLine...
                    'Tick this option to set the lag length manually and type the ' nb_newLine...
                    'lag length. ' nb_newLine(2)...
                    'Philips-Perron test ' nb_newLine(2)...
                    'Test for unit root in: ' nb_newLine...
                    'Choose the transformation of the tested variable.' nb_newLine(2)...
                    'Include in test equation: ' nb_newLine...
                    'Choose the tested model' nb_newLine(2)...
                    'Variable(s) ' nb_newLine...
                    'Select the variable to test. Choosing "all" will do the test for all' nb_newLine...
                    'variables individually. ' nb_newLine(2)...
                    'Start date:' nb_newLine...
                    'Start date of test sample. ' nb_newLine(2)...
                    'End date:' nb_newLine...
                    'End date of test sample.' nb_newLine(2)...
                    'Spectral estimation method: ' nb_newLine...
                    'Choose the kernel to use for the spectral estimation. DAG lets you choose ' nb_newLine...
                    'between three options which are briefly explained in DAG Used manual. ' nb_newLine(2)...
                    'Information criteria: ' nb_newLine...
                    'Here you can choose between six information criterias. ' nb_newLine...
                    'For more information on these, see the DAG User Manual.' nb_newLine(2)...
                    'Maximum: ' nb_newLine...
                    'Select the maximum tested lag lengths. ' nb_newLine(2)...
                    'User specified: ' nb_newLine...
                    'Tick this option to set the lag length manually and type the ' nb_newLine...
                    'lag length. '];
           
        case 'Variance (series selection)'
            
            type = 'variance';
            switch class(gui.parent.data)
                case {'nb_ts','nb_data'}
                    dim1  = ['- Observations: Calculates the ' type ' over observations. If postfix is given it will add ' nb_newLine...
                              'new series with all non-nan observations of all the selected variables set to the ' type '. If ' nb_newLine...
                              'postfix is empty and the all button is ticked on you will assign the calculated ' type ' to ' nb_newLine...
                              'all observations of each variable (Which is not nan). The calculation are done seperatly over ' nb_newLine...
                              'each page. By using the start obs and end obs you can select over which time period to calculate ' nb_newLine...
                              'the ' type '.'];
                    dim2  = ['- Variables: Calculates the ' type ' over variables. If the all button is not ticked it will add a ' nb_newLine...
                              'new series with the ' type ' over the selected variables (Ignoring nan-values). Select the variables ' nb_newLine...
                              'you want to calculate the ' type ' over in the variables selection list. Tick the all button to ' nb_newLine...
                              'calculate ' type ' over all variables and assign the calculated ' type ' to all existing variables. '  nb_newLine...
                              'All nan observations are not set to the ' type '. The calculation are done seperatly over each observation ' nb_newLine...
                              'and page.'];
                    dim3  = ['- Pages: Calculates the ' type ' over pages. If the all button is not ticked it will return only one ' nb_newLine...
                              'page with the ' type ' over the selected pages (Ignoring nan-values). Tick the all button to ' nb_newLine...
                              'calculate ' type ' over all pages and assign the calculated ' type ' to all existing pages. All nan '  nb_newLine...
                              'observations are not set to the ' type '. The calculation are done seperatly over each observation and ' nb_newLine ...
                              'variable.'];
                case 'nb_cs'
                    dim1  = ['- Types: Calculates the ' type ' over all types. If postfix is given it will add new series ' nb_newLine...
                              'with all non-nan observations of all the selected variables set to the ' type '. If postfix is ' nb_newLine...
                              'empty and the all button is ticked on you will assign the calculated ' type ' to all types ' nb_newLine...
                              'of each variable (Which is not nan). The calculation are done seperatly over each page.'];
                    dim2  = ['- Variables: Calculates the ' type ' over variables. If the all button is not ticked it will add a ' nb_newLine...
                              'new series with the ' type ' over the selected variables (Ignoring nan-values). Select the variables ' nb_newLine...
                              'you want to calculate the ' type ' over in the variables selection list. Tick the all button to ' nb_newLine...
                              'calculate ' type ' over all variables and assign the calculated ' type ' to all existing variables. '  nb_newLine...
                              'All nan observations are not set to the ' type '. The calculation are done seperatly over each type ' nb_newLine...
                              'and page.'];
                    dim3  = ['- Pages: Calculates the ' type ' over pages. If the all button is not ticked it will return only one ' nb_newLine...
                              'page with the ' type ' over the selected pages (Ignoring nan-values). Tick the all button to ' nb_newLine...
                              'calculate ' type ' over all pages and assign the calculated ' type ' to all existing pages. All nan '  nb_newLine...
                              'observations are not set to the ' type '. The calculation are done seperatly over each type and ' nb_newLine ...
                              'variable.'];
            end
            
            text = ['Takes the variance over all elements in the dimension you choose. ' nb_newLine...
                    'The options will depend on the dimension you calculate the ' type ' over:' nb_newLine nb_newLine...
                    dim1 nb_newLine nb_newLine dim2 nb_newLine nb_newLine dim3];         
                
        case 'Window'
            
            text = ['This method let you narrow down the time-series. Choose a start observation ' nb_newLine...
                    'and an end observation, then click OK. The method will then return a new column ' nb_newLine...
                    'with the interval of data you chose. '];
                       
        case 'x12 Census'
            
            text = ['This method let you do a x12 census (seasonal) adjustment to a time-series object. ' nb_newLine(2)...
                    'Output - The requested output data. You can choose between the following:' nb_newLine(2)...
                    'Irregular Component: For the irregular component ' nb_newLine...
                    'Seasonally Adjusted Series: For the final seasonally adjusted series. ' nb_newLine...
                    'Seasonal: For seasonal factors' nb_newLine...
                    'Trend Cycle Series: For the trend-cycle.' nb_newLine...
                    '' nb_newLine(2)...
                    'Dummy type: Choose whether you want a holiday or weekend dummy. ' nb_newLine(2)...
                    'Logartihmise: Logarithmise the input data before, and de-logarithmise the output data ' nb_newLine...
                    'back after running x12. ' nb_newLine(2)...
                    'Max iterations: Maximum number of iterations for the x12 estimation procedure. ' nb_newLine...
                    'Must be numeric.' nb_newLine(2)...
                    'Missing observations: This option allows for in-sample missing observations, and fill ' nb_newLine...
                    'in values predicted by an estimated ARIMA processs. '];
                
        otherwise
            
            text = '';
            
            
    end
    
    nb_infoWindow(text,['Help on method ' method],true,'on',[],'normal');
    
end
