function baselinePanel(gui)
% Syntax:
%
% baselinePanel(gui)
%
% Description:
%
% Part of DAG. Creates a panel for editing baseline properties  
% 
% Written by Kenneth Sæterhagen Paulsen

% Copyright (c) 2024, Kenneth Sæterhagen Paulsen

    % Get graph object 
    plotterT = gui.plotter;

    % Create panel
    %--------------------------------------------------------------
    uip = uipanel('parent',              gui.figureHandle,...
                  'title',               '',...
                  'visible',             'off',...
                  'borderType',          'none',... 
                  'units',               'normalized',...
                  'position',            [0.22, 0.02, 1 - 0.24, 0.96]); 
    gui.panelHandle2 = uip;
    
    startPopX = 0.3;
    widthPop  = 0.35;
    heightPop = 0.055;
    startTX   = 0.04;
    widthT    = widthPop - startTX*2;
    heightT   = 0.053;
    widthB    = 1 - startPopX - widthPop - startTX*2;
    startB    = startPopX + widthPop + startTX;
    kk        = 9;
    spaceYPop = (1 - heightPop*kk)/(kk +1);
    extra     = -(heightPop - heightT)*5;
    
    % Base line
    %--------------------------------------------------------------
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Baseline');
          
    uicontrol(...
              'units',          'normalized',...
              'position',       [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',         uip,...
              'style',          'radiobutton',...
              'Interruptible',  'off',...
              'string',         'on/off',...
              'value',          plotterT.baseLine,....
              'callback',       {@gui.set,'baseline'});
          
    % Base line color
    %----------------------------------------------------------
    kk = kk - 1;
    uicontrol('units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Baseline Color'); 

    % Locate the selected color in the color list
    parent     = gui.plotter.parent;
    endc       = nb_getGUIColorList(gui,parent);
    colorTemp  = plotterT.baseLineColor;
    valueColor = nb_findColor(colorTemp,endc);
    if valueColor == 0
        [endc,valueColor] = nb_addColor(gui,parent,endc,colorTemp);
    end

    % Using html coding to get the background of the 
    % listbox colored  
    colors = nb_selectVariableGUI.htmlColors(endc);

    h1 = uicontrol(...
              'units',          'normalized',...
              'position',       [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',         uip,...
              'background',     [1 1 1],...
              'style',          'popupmenu',...
              'Interruptible',  'off',...
              'string',         colors,...
              'value',          valueColor,....
              'callback',       {@gui.set,'baselineColor'});

    hc = uicontrol(...
              'units',          'normalized',...
              'position',       [startB, heightPop*(kk-1) + spaceYPop*kk, widthB, heightPop],...
              'parent',         uip,...
              'style',          'pushbutton',...
              'Interruptible',  'off',...
              'busyAction',     'cancel',...
              'string',         'Define',...
              'callback',       {@nb_setDefinedColor,gui,h1});       
    
    % Base line style
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Baseline Style');

    options = {'-','--',':','-.','none'};  
    value   = find(strcmpi(plotterT.baseLineStyle,options));
      
    if isempty(value)
        value = 2;
        plotterT.baseLineStyle = '--';
    end
    
    h2 = uicontrol(...
              'units',          'normalized',...
              'position',       [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',         uip,...
              'background',     [1 1 1],...
              'style',          'popupmenu',...
              'Interruptible',  'off',...
              'string',         options,...
              'value',          value,....
              'callback',       {@gui.set,'baselineStyle'});
          
    % Base line width
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Baseline Width*');

    h3 = uicontrol(...
              'units',              'normalized',...
              'position',           [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',             uip,...
              'background',         [1 1 1],...
              'horizontalAlignment','right',...
              'style',              'edit',...
              'Interruptible',      'off',...
              'string',             num2str(plotterT.baseLineWidth),...
              'callback',           {@gui.set,'baselineWidth'});      
          
    % If baseline
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Baseline Value');

    h4 = uicontrol(...
              'units',              'normalized',...
              'position',           [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',             uip,...
              'background',         [1 1 1],...
              'horizontalAlignment','right',...
              'style',              'edit',...
              'Interruptible',      'off',...
              'string',             num2str(plotterT.baseValue),...
              'callback',           {@gui.set,'baseValue'});        
       
    % Enable/unable editing
    %--------------------------------------------------------------
    if ~plotterT.baseLine
        set(h1,'enable','off');
        set(h2,'enable','off');
        set(h3,'enable','off');
        set(h4,'enable','off');
        set(hc,'enable','off');
    end
    
    gui.handle1 = h1;
    gui.handle2 = h2;
    gui.handle3 = h3;
    gui.handle4 = h4;
    gui.handlec = hc;
    
    % Template note 
    %--------------------------------------------------------------
    nb_graphSettingsGUI.addTemplateFootnote(uip,false);
    
end
