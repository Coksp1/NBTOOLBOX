function makeGUI(gui)
% Syntax:
%
% makeGUI(gui)
%
% Description:
%
% Part of DAG.
% 
% Written by Kenneth Sæterhagen Paulsen

% Copyright (c) 2024, Kenneth Sæterhagen Paulsen

    % Get graph object 
    plotterAdv = gui.plotter;
    if isa(plotterAdv.plotter,'nb_table_data_source')
        string = 'Table';
    else
        string = 'Figure';
    end
    
    % Create window
    %--------------------------------------------------------------
    parent           = plotterAdv.plotter(1).parent;
    f                = nb_guiFigure(parent,'Numbering Options',[65   15  60   30],'normal');
    gui.figureHandle = f;
    
    % Coordinates
    startPopX = 0.55;
    widthPop  = 0.2;
    heightPop = 0.055;
    startTX   = 0.04;
    widthT    = startPopX - startTX*2;
    heightT   = 0.053;
    %widthB    = 1 - startPopX - widthPop - startTX*2;
    %startB    = startPopX + widthPop + startTX;
    kk        = 8;
    spaceYPop = (1 - heightPop*kk)/(kk +1);
    extra     = -(heightPop - heightT)*5;
    
    % Letter counting
    %--------------------------------------------------------------
    nb_uicontrolDAG(parent,...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 f,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Letter "Counting"',...
              'tooltip',                'If selected, this graph will be counted with a capital letter in the graph package. Ex. 1.A, 1.B and so on.');
          
    uicontrol(...
              'units',          'normalized',...
              'position',       [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',         f,...
              'style',          'radiobutton',...
              'Interruptible',  'off',...
              'string',         'on/off',...
              'value',          plotterAdv.letter,....
              'callback',       {@gui.setProperties,'letter'});
        
    kk = kk - 1;   
          
    if isprop(plotterAdv,'letterRestart')
        letterRestart = plotterAdv.letterRestart;
    else
        letterRestart = 0;
    end
    nb_uicontrolDAG(parent,...
              'units',          'normalized',...
              'position',       [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop*1.3, heightPop],...
              'parent',         f,...
              'style',          'radiobutton',...
              'Interruptible',  'off',...
              'string',         'Restart',...
              'value',          letterRestart,...
              'tooltip',        'When selected, the counter will reset when it reaches this graph.',...
              'callback',       {@gui.setProperties,'letterRestart'});      
          
    % Counter
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 f,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 ['Set ' string ' Number (1.X)']);

    uicontrol(...
              'units',              'normalized',...
              'position',           [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',             f,...
              'background',         [1 1 1],...
              'horizontalAlignment','right',...
              'style',              'edit',...
              'Interruptible',      'off',...
              'string',             num2str(plotterAdv.counter),...
              'callback',           {@gui.setProperties,'counter'});  
          
    % Number
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 f,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 ['Set ' string ' Number (X)']);

    uicontrol(...
              'units',              'normalized',...
              'position',           [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',             f,...
              'background',         [1 1 1],...
              'horizontalAlignment','right',...
              'style',              'edit',...
              'Interruptible',      'off',...
              'string',             num2str(plotterAdv.number),...
              'callback',           {@gui.setProperties,'number'});  
          
    % Jump
    %--------------------------------------------------------------
    kk = kk - 1;
    nb_uicontrolDAG(parent,...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 f,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Jump',...
              'tooltip',                'Determines the step size between the previous figure and this one.');

    uicontrol(...
              'units',              'normalized',...
              'position',           [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',             f,...
              'background',         [1 1 1],...
              'horizontalAlignment','right',...
              'style',              'edit',...
              'Interruptible',      'off',...
              'string',             num2str(plotterAdv.jump),...
              'callback',           {@gui.setProperties,'jump'}); 
         
    % Chapter
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 f,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Chapter');

    uicontrol(...
              'units',              'normalized',...
              'position',           [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',             f,...
              'background',         [1 1 1],...
              'horizontalAlignment','right',...
              'style',              'edit',...
              'Interruptible',      'off',...
              'string',             num2str(plotterAdv.chapter),...
              'callback',           {@gui.setProperties,'chapter'});    

    % Note
    %--------------------------------------------------------------     
    kk = kk - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra - 0.05, widthT+0.5, heightT+0.06],...
              'parent',                 f,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 '*) These options only take effect when the graph is included in a graph package. Thus, you will not see them until you export the package as a PDF.');
          
    % Make GUI visible
    %--------------------------------------------------------------
    set(f,'visible','on')
          
end
