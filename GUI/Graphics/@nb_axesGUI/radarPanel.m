function radarPanel(gui)
% Syntax:
%
% radarPanel(gui)
%
% Description:
%
% Part of DAG.
% 
% Written by Kenneth Sæterhagen Paulsen

% Copyright (c) 2021, Kenneth Sæterhagen Paulsen

    % Get graph object 
    plotter = gui.plotter;

    % Create panel
    %--------------------------------------------------------------
    uip = uipanel(gui.buttonPanel,...
        'button',              'Radar',...
        'title',               '',...
        'borderType',          'none'); 
    gui.panelHandle1 = uip;
    
    startPopX = 0.3;
    widthPop  = 0.35;
    heightPop = 0.045;
    startTX   = 0.04;
    widthT    = widthPop - startTX*2;
    heightT   = 0.04;
    kk        = 12; 
    spaceYPop = (1 - heightPop*kk)/(kk + 1);
    extra     = -(heightPop - heightT);

    % Radar Scale
    %--------------------------------------------------------------
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Scale');

    pos      = plotter.radarScale;
    space    = 0.02;
    widthPos = widthPop/2 - space/2;
    
    uicontrol(...
              'units',              'normalized',...
              'position',           [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPos, heightPop],...
              'parent',             uip,...
              'background',         [1 1 1],...
              'style',              'edit',...
              'Interruptible',      'off',...
              'horizontalAlignment','right',...
              'string',             num2str(pos(1)),...
              'callback',           {@gui.setRadarScale,1}); 
    
    uicontrol(...
              'units',              'normalized',...
              'position',           [startPopX + widthPos + space, heightPop*(kk-1) + spaceYPop*kk, widthPos, heightPop],...
              'parent',             uip,...
              'background',         [1 1 1],...
              'style',              'edit',...
              'Interruptible',      'off',...
              'horizontalAlignment','right',...
              'string',             num2str(pos(2)),...
              'callback',           {@gui.setRadarScale,2}); 
           
    % Number of Iso-Lines
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Number of Iso-Lines');


    num = plotter.radarNumberOfIsoLines;
    num = num2str(num);
    
    uicontrol(...
              'units',              'normalized',...
              'position',           [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',             uip,...
              'background',         [1 1 1],...
              'horizontalAlignment','right',...
              'Interruptible',      'off',...
              'style',              'edit',...
              'string',             num,...
              'callback',           @gui.setRadarNumberOfIsoLines);   
       
    % Rotate
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Rotation');


    num = plotter.radarRotate;
    num = num2str(num);
    
    uicontrol(...
              'units',              'normalized',...
              'position',           [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',             uip,...
              'background',         [1 1 1],...
              'horizontalAlignment','right',...
              'Interruptible',      'off',...
              'style',              'edit',...
              'string',             num,...
              'callback',           @gui.setRadarRotate); 
          
    % Create table with types options
    %--------------------------------------------------------------
    typesOfData = plotter.DB.types;
    typesToPlot = plotter.typesToPlot;
    ind         = ismember(typesOfData,typesToPlot);
    indS        = size(ind,2);
    indC        = cell(indS,1);
    for ii = 1:indS
        indC{ii} = ind(ii);
    end

    tableData = [typesOfData',indC];
    colNames  = {'Types','Plot'};
    colEdit   = [false,true];
    colForm   = {'char','logical'};
    gui.table = nb_uitable(uip,...
                    'units',                'normalized',...
                    'position',             [startTX, 0.04, 0.92, 1 - heightPop*6 - spaceYPop*7 - 0.04],...
                    'data',                 tableData,...
                    'columnName',           colNames,...
                    'columnFormat',         colForm,...
                    'columnEdit',           colEdit,...
                    'cellEditCallback',     @gui.cellEdit);

end
