function templatePanel(gui)
% Syntax:
%
% templatePanel(gui)
%
% Description:
%
% Part of DAG.
% 
% Written by Kenneth Sæterhagen Paulsen

% Copyright (c) 2021, Kenneth Sæterhagen Paulsen

    % Get graph object 
    plotterT = gui.plotter;

    % Create panel
    %--------------------------------------------------------------
    uip = uipanel('parent',              gui.figureHandle,...
                  'title',               '',...
                  'visible',             'off',...
                  'borderType',          'none',... 
                  'units',               'normalized',...
                  'position',            [0.22, 0.02, 1 - 0.24, 0.96]); 
    gui.panelHandle5 = uip;
    
%     startPopX = 0.3;
%     widthPop  = 0.35;
%     heightPop = 0.055;
%     startTX   = 0.04;
%     widthT    = widthPop - startTX*2;
%     heightT   = 0.053;
%     kk        = 9;
%     spaceYPop = (1 - heightPop*kk)/(kk +1);
%     extra     = -(heightPop - heightT)*5;
%     
%     % Language
%     %----------------------------------------------------------
%     uicontrol(...
%               'units',                  'normalized',...
%               'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
%               'parent',                 uip,...
%               'style',                  'text',...
%               'horizontalAlignment',    'left',...
%               'string',                 'Language');
% 
% 
%     strings = {'english','norwegian','engelsk','norsk'};
%     lang    = plotterT.language; 
%     value   = find(strcmpi(lang,strings));
%     if isempty(value)
%         value = 1;
%     elseif value == 3
%         value = 1;
%     elseif value == 4
%         value = 2;
%     end
%     strings = strings(1:2);
% 
%     uicontrol(...
%               'units',          'normalized',...
%               'position',       [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
%               'parent',         uip,...
%               'background',     [1 1 1],...
%               'style',          'popupmenu',...
%               'Interruptible',  'off',...
%               'string',         strings,...
%               'value',          value,....
%               'callback',       {@gui.set,'language'});    
    
%     % Font Name
%     %--------------------------------------------------------------
%     kk = kk - 1;
%     uicontrol(...
%               'units',                  'normalized',...
%               'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
%               'parent',                 uip,...
%               'style',                  'text',...
%               'horizontalAlignment',    'left',...
%               'string',                 'Font Name');
% 
%     options = listfonts;
%     value   = find(strcmpi(plotterT.fontName,options),1);
%     
%     uicontrol(...
%               'units',          'normalized',...
%               'position',       [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
%               'parent',         uip,...
%               'background',     [1 1 1],...
%               'style',          'popupmenu',...
%               'Interruptible',  'off',...
%               'string',         options,...
%               'value',          value,....
%               'callback',       {@gui.set,'fontName'});
%    
%     % Font Size
%     %--------------------------------------------------------------
%     kk = kk - 1;
%     uicontrol(...
%               'units',                  'normalized',...
%               'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
%               'parent',                 uip,...
%               'style',                  'text',...
%               'horizontalAlignment',    'left',...
%               'string',                 'Font Size');
% 
%     string = num2str(plotterT.fontSize);
%     
%     uicontrol(...
%               'units',          'normalized',...
%               'position',       [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
%               'parent',         uip,...
%               'background',     [1 1 1],...
%               'style',          'edit',...
%               'Interruptible',  'off',...
%               'string',         string,...
%               'callback',       {@gui.set,'fontSize'});       
%           
%     % Font Size Scalefactor
%     %--------------------------------------------------------------
%     kk = kk - 1;
%     uicontrol(...
%               'units',                  'normalized',...
%               'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
%               'parent',                 uip,...
%               'style',                  'text',...
%               'horizontalAlignment',    'left',...
%               'string',                 'Scale All Fonts');
% 
%     uicontrol(...
%               'units',              'normalized',...
%               'position',           [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
%               'parent',             uip,...
%               'background',         [1 1 1],...
%               'horizontalAlignment','right',...
%               'style',              'edit',...
%               'Interruptible',      'off',...
%               'string',             num2str(plotterT.fontScale),...
%               'callback',           {@gui.set,'fontScale'}); 
%       
%     % Interpreter
%     %----------------------------------------------------------
%     kk = kk - 1;
%     uicontrol(...
%               'units',                  'normalized',...
%               'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
%               'parent',                 uip,...
%               'style',                  'text',...
%               'horizontalAlignment',    'left',...
%               'string',                 'Interpreter');
% 
% 
%     strings = {'none','tex'};
%     lang    = plotterT.interpreter; 
%     value   = find(strcmpi(lang,strings));
%     if isempty(value)
%         value = 1;
%     end
% 
%     uicontrol(...
%               'units',          'normalized',...
%               'position',       [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
%               'parent',         uip,...
%               'background',     [1 1 1],...
%               'style',          'popupmenu',...
%               'Interruptible',  'off',...
%               'string',         strings,...
%               'value',          value,....
%               'callback',       {@gui.set,'interpreter'});      
%           
%     % Decimals
%     %--------------------------------------------------------------
%     kk = kk - 1;
%     uicontrol(...
%               'units',                  'normalized',...
%               'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
%               'parent',                 uip,...
%               'style',                  'text',...
%               'horizontalAlignment',    'left',...
%               'string',                 'Decimals');
% 
%     if isempty(plotterT.decimals) 
%         string = '';
%     else
%         string = int2str(plotterT.decimals);
%     end
%     options   = {'0','1','2','3','4','5','6','7','8','9'};
%     [~,value] = ismember(string,options);
%     if isempty(value)
%         value = 4;
%     end
% 
%     uicontrol(...
%               'units',          'normalized',...
%               'position',       [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
%               'parent',         uip,...
%               'background',     [1 1 1],...
%               'style',          'popupmenu',...
%               'Interruptible',  'off',...
%               'string',         options,...
%               'value',          value,....
%               'callback',       {@gui.set,'decimals'});
%      
%     kk = kk - 1;
            
end
