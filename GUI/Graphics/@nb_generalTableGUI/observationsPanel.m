function observationsPanel(gui)
% Syntax:
%
% observationsPanel(gui)
%
% Description:
%
% Part of DAG. Creates the panel with the dates/observations properties
% 
% Written by Kenneth Sæterhagen Paulsen

% Copyright (c) 2021, Kenneth Sæterhagen Paulsen

    % Get graph object 
    plotter = gui.plotter;
    
    % Create panel
    %--------------------------------------------------------------
    uip = uipanel('parent',              gui.figureHandle,...
                  'title',               '',...
                  'visible',             'off',...
                  'borderType',          'none',... 
                  'units',               'normalized',...
                  'position',            [0.22, 0.02, 1 - 0.24, 0.96]); 
    gui.panelHandle4 = uip;
      
    if isa(plotter,'nb_table_ts')
        if isempty(plotter.datesOfTable)
            enableTop = 'on';
        else
            enableTop = 'off';
        end
    elseif isa(plotter,'nb_table_data')
        if isempty(plotter.observationsOfTable)
            enableTop = 'on';
        else
            enableTop = 'off';
        end
    end
    
    if isa(plotter,'nb_table_ts') ||  isa(plotter,'nb_table_data')
        
        firstPanelStart = 0.7;
        
        % Panel for setting x-axis limits
        %--------------------------------------------------------------
        % We want to return local variables if used
        plotter.setSpecial('returnLocal',1);

        start = plotter.startTable;
        if isa(start,'nb_date') || isnumeric(start)
            start = toString(start);
        end

        finish = plotter.endTable;
        if isa(finish,'nb_date') || isnumeric(finish)
            finish = toString(finish);
        end

        % We must reset the returnLocal property, so everything
        % works as it suposed.
        plotter.setSpecial('returnLocal',0);
        
        % Set x-axis visible range
        %----------------------------------------------------------
        uipvr = uipanel('parent',              uip,...
                        'title',               'Visible range',...
                        'units',               'normalized',...
                        'position',            [0.04, firstPanelStart, 0.92, 1 - firstPanelStart - 0.04]);

        % Add uicontrol elements to change the startGraph property
        %----------------------------------------------------------
        if get(plotter,'manuallySetStartTable')
            enable = 'on';
            valueR = 1;
        else
            enable = 'off';
            valueR = 0;
        end

        uicontrol(...
                        'units',                'normalized',...
                        'position',             [0.04, 0.36, 0.15, 0.2],...
                        'parent',               uipvr,...
                        'style',                'text',...
                        'horizontalAlignment',  'left',...
                        'string',               'Start:'); 

        pmhsg = uicontrol('units',                'normalized',...
                          'position',             [0.2, 0.36, 0.30, 0.2],...
                          'parent',               uipvr,...
                          'style',                'edit',...
                          'background',           [1 1 1],...
                          'Interruptible',        'off',...
                          'horizontalAlignment',  'left',...
                          'enable',               enable,...
                          'string',               start,...
                          'callback',             {@gui.set,'startTable'});  
        gui.editBox1 = pmhsg;

        % Add uicontrol elements to change the endGraph property 
        %----------------------------------------------------------
        if get(plotter,'manuallySetEndTable')
            enable = 'on';
            valueRE = 1;
        else
            enable = 'off';
            valueRE = 0;
        end

        if strcmpi(enableTop,'off')
            enable = 'off';
        end
        
        uicontrol(...
                        'units',                'normalized',...
                        'position',             [0.04, 0.08, 0.15, 0.2],...
                        'parent',               uipvr,...
                        'style',                'text',...
                        'horizontalAlignment',  'left',...
                        'string',               'End:'); 

        pmheg = uicontrol('units',                'normalized',...
                          'position',             [0.2, 0.08, 0.30, 0.2],...
                          'parent',               uipvr,...
                          'style',                'edit',...
                          'background',           [1 1 1],...
                          'Interruptible',        'off',...
                          'horizontalAlignment',  'left',...
                          'enable',               enable,...
                          'string',               finish,...
                          'callback',             {@gui.set,'endTable'});      
        gui.editBox2 = pmheg;

        % The text above the auto/manual radiobuttons    
        %----------------------------------------------------------
        uicontrol(...
                        'units',                'normalized',...
                        'position',             [0.55, 0.64, 0.15, 0.2],...
                        'parent',               uipvr,...
                        'style',                'text',...
                        'string',               'Auto');

        uicontrol(...
                        'units',                'normalized',...
                        'position',             [0.70, 0.64, 0.15, 0.2],...
                        'parent',               uipvr,...
                        'style',                'text',...
                        'string',               'Manual'); 

        % Create the radio button group to select if the start
        % graph should be set manually or automatic
        %----------------------------------------------------------
        uibg1 = uibuttongroup('parent',              uipvr,...
                              'title',               '',...
                              'borderType',          'none',...
                              'Interruptible',       'off',...
                              'busyAction',          'cancel',...
                              'units',               'normalized',...
                              'position',            [0.55, 0.36, 0.30, 0.2],...
                              'SelectionChangeFcn',  {@gui.enableEditObservations,'startTable'}); 

        % Make a radio button for each type  
        uicontrol(...
                          'units',              'normalized',...
                          'position',           [0.22,0,0.25,1],...
                          'parent',             uibg1,...
                          'style',              'radiobutton',...
                          'tag',                'auto',...
                          'string',             '',...
                          'enable',             enableTop,...
                          'value',              ~valueR);          

        uicontrol(...
                          'units',              'normalized',...
                          'position',           [0.72,0,0.25,1],...
                          'parent',             uibg1,...
                          'style',              'radiobutton',...
                          'tag',                'manual',...
                          'string',             '',...
                          'enable',             enableTop,...
                          'value',              valueR);  

        % Create the radio button group to select if the end
        % graph should be set manually or automatic
        %----------------------------------------------------------
        uibg2 = uibuttongroup('parent',              uipvr,...
                              'title',               '',...
                              'borderType',          'none',...
                              'Interruptible',       'off',...
                              'busyAction',          'cancel',...
                              'units',               'normalized',...
                              'position',            [0.55, 0.08, 0.30, 0.2],...
                              'SelectionChangeFcn',  {@gui.enableEditObservations,'endTable'}); 

        % Make a radio button for each type                 
        uicontrol(...
                          'units',              'normalized',...
                          'position',           [0.22,0,0.25,1],...
                          'parent',             uibg2,...
                          'style',              'radiobutton',...
                          'tag',                'auto',...
                          'string',             '',...
                          'enable',             enableTop,...
                          'value',              ~valueRE);          

        uicontrol(...
                          'units',              'normalized',...
                          'position',           [0.72,0,0.25,1],...
                          'parent',             uibg2,...
                          'style',              'radiobutton',...
                          'tag',                'manual',...
                          'string',             '',...
                          'enable',             enableTop,...
                          'value',              valueRE);   
                      
    else
        firstPanelStart = 1;
    end
                      
    % Other properties
    %--------------------------------------------------------------
    startPopX = 0.3;
    widthPop  = 0.35;
    heightPop = 0.045;
    startTX   = 0.04;
    widthT    = widthPop - startTX*2;
    heightT   = 0.04;
%     widthB    = 1 - startPopX - widthPop - startTX*2;
%     startB    = startPopX + widthPop + startTX;
    kk        = 9;
    spaceYPop = (firstPanelStart - heightPop*kk)/(kk + 1);
    extra     = -(heightPop - heightT);
        
    % spacing 
    %-------------------------------------------------------------- 
    if isa(plotter,'nb_table_ts') ||  isa(plotter,'nb_table_data')
         
        uicontrol(...
                  'units',                  'normalized',...
                  'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
                  'parent',                 uip,...
                  'style',                  'text',...
                  'horizontalAlignment',    'left',...
                  'string',                 'Spacing');

        value = plotter.spacing;
        str   = int2str(value);

        uicontrol(...
                  'units',                  'normalized',...
                  'position',               [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
                  'parent',                 uip,...
                  'background',             [1 1 1],...
                  'style',                  'edit',...
                  'horizontalAlignment',    'right',...
                  'enable',                 enable,...
                  'Interruptible',          'off',...
                  'string',                 str,...
                  'callback',               {@gui.set,'spacing'}); 
                  
    end
    
    % Frequency
    %--------------------------------------------------------------     
%     if isa(obj,'nb_table_ts')
%     
%         kk = kk - 1;
%         uicontrol(...
%                   'units',                  'normalized',...
%                   'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
%                   'parent',                 uip,...
%                   'style',                  'text',...
%                   'horizontalAlignment',    'left',...
%                   'string',                 'Frequency');
% 
%         listFreq   = [365,52,12,4,2,1];
%         stringFreq = {'Daily','Weekly','Monthly','Quarterly','Semiannually','Yearly'};
%         freq       = plotter.DB.frequency; 
%         strings    = stringFreq(listFreq <= freq);
%         value      = find(strcmpi(plotter.frequency,strings));
%         if isempty(value)
%             value = 1;
%         end
% 
%         uicontrol(...
%                   'units',          'normalized',...
%                   'position',       [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
%                   'parent',         uip,...
%                   'background',     [1 1 1],...
%                   'style',          'popupmenu',...
%                   'Interruptible',  'off',...
%                   'string',         strings,...
%                   'value',          value,....
%                   'callback',       {@gui.set,'frequency'});
%               
%     end 
    
end
