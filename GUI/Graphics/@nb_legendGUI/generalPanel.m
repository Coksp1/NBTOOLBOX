function generalPanel(gui)
% Syntax:
%
% generalPanel(gui)
%
% Description:
%
% Part of DAG. Creates a panel for editing general legend properties
% 
% Written by Kenneth Sæterhagen Paulsen

% Copyright (c) 2021, Kenneth Sæterhagen Paulsen

    % Get graph object 
    plotterT = gui.plotter;

    % Create panel
    %--------------------------------------------------------------
    uip = uipanel('parent',              gui.figureHandle,...
                  'title',               '',...
                  'visible',             'off',...
                  'borderType',          'none',... 
                  'units',               'normalized',...
                  'position',            [0.22, 0.02, 1 - 0.24, 0.96]); 
    gui.panelHandle2 = uip;
    
    kk        = 10;
    startPopX = 0.3;
    widthPop  = 0.35;
    heightPop = 0.055;
    startTX   = 0.04;
    widthT    = widthPop - startTX*2;
    heightT   = 0.053;
    widthB    = 1 - startPopX - widthPop - startTX*2;
    startB    = startPopX + widthPop + startTX;
    spaceYPop = (1 - heightPop*kk)/(kk+1);
    extra     = -(heightPop - heightT)*5;
    
    % Box
    %--------------------------------------------------------------
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Box*');

    options = {'on','off'};
    if strcmpi(plotterT.legBox,'on')
        value = 1;
    else
        value = 2;
    end
          
    uicontrol(...
              'units',          'normalized',...
              'position',       [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',         uip,...
              'background',     [1 1 1],...
              'style',          'popupmenu',...
              'Interruptible',  'off',...
              'string',         options,...
              'value',          value,....
              'callback',       @gui.setBoxOption);
    
    % Columns
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Columns*');


    value           = plotterT.legColumns;
    numberOfLegends = size(plotterT.legendText,2)/2;
    num             = min(max(numberOfLegends,5),5);
    columns         = cell(1,num);
    for ii = 1:num
        columns{ii} = int2str(ii);
    end
    if value > num
        plotterT.legColumns = num;
        
        % Notify listeners
        notify(gui,'changedGraph');
    end
    
    uicontrol(...
              'units',          'normalized',...
              'position',       [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',          uip,...
              'background',     [1 1 1],...
              'style',          'popupmenu',...
              'Interruptible',  'off',...
              'string',         columns,...
              'value',          value,....
              'callback',       @gui.setColumns);
          
    
    % Column width
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Column Width');


    legCW = plotterT.legColumnWidth;
    if size(legCW,2) > 1
        legCW = legCW(1);
    end
    legCW = num2str(legCW);
    
    uicontrol(...
              'units',              'normalized',...
              'position',           [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',             uip,...
              'background',         [1 1 1],...
              'horizontalAlignment','right',...
              'Interruptible',      'off',...
              'style',              'edit',...
              'string',             legCW,...
              'callback',           @gui.editColumnWidth);
          
    % Row space
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Row Space*');


    legS = plotterT.legSpace;
    legS = num2str(legS);
    
    uicontrol(...
              'units',              'normalized',...
              'position',           [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',             uip,...
              'background',         [1 1 1],...
              'horizontalAlignment','right',...
              'Interruptible',      'off',...
              'style',              'edit',...
              'string',             legS,...
              'callback',           @gui.editSpace);  
          
    % Font Size
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Font Size*');


    legS = plotterT.legFontSize;
    legS = num2str(legS);
    
    uicontrol(...
              'units',              'normalized',...
              'position',           [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',             uip,...
              'background',         [1 1 1],...
              'horizontalAlignment','right',...
              'Interruptible',      'off',...
              'style',              'edit',...
              'string',             legS,...
              'callback',           @gui.editFontSize);  
                

    % Interpreter
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Interpreter*');


    options = {'none','tex','latex'};
    value   = find(strcmpi(plotterT.legInterpreter,options),1);
    
    uicontrol(...
              'units',          'normalized',...
              'position',       [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',         uip,...
              'background',     [1 1 1],...
              'style',          'popupmenu',...
              'Interruptible',  'off',...
              'string',         options,...
              'value',          value,....
              'callback',       @gui.setInterpreter);  
          
    % Reorder
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Reorder');

    
    if ischar(plotterT.legReorder)
        options = {'default','inverse'};
        value   = find(strcmpi(plotterT.legReorder,options),1);
        enable  = 'on';
    else
        options = {' '};
        value   = 1;
        enable  = 'off';
    end
    
    uicontrol(...
              'units',          'normalized',...
              'position',       [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',         uip,...
              'background',     [1 1 1],...
              'style',          'popupmenu',...
              'Interruptible',  'off',...
              'string',         options,...
              'value',          value,....
              'enable',         enable,...
              'callback',       @gui.setReorder); 
          
    % Location
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Location*');

    options = {'Best','East','NorthWest','North','NorthEast','SouthEast','South',...
               'SouthWest','West','Below','Middle','OutsideRight','OutsideRightTop'};
    value   = find(strcmpi(plotterT.legLocation,options),1);
    
    if isempty(plotterT.legPosition)
        enable  = 'on';
        valueR  = 0;
    else
        enable  = 'off';
        valueR  = 1;
    end
    
    pop1 = uicontrol(...
              'units',          'normalized',...
              'position',       [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',         uip,...
              'background',     [1 1 1],...
              'style',          'popupmenu',...
              'Interruptible',  'off',...
              'string',         options,...
              'value',          value,....
              'enable',         enable,...
              'callback',       @gui.setLocation); 
    gui.popupmenu1 = pop1;      
          
    r1 = uicontrol(...
                  'units',          'normalized',...
                  'position',       [startB, heightPop*(kk-1) + spaceYPop*kk, widthB, heightPop],...
                  'parent',         uip,...
                  'style',          'radiobutton',...
                  'Interruptible',  'off',...
                  'busyAction',     'cancel',...
                  'string',         'Loc/Pos',...
                  'value',          valueR,...
                  'callback',       @gui.changeLocationOption);           
              
    gui.radiobutton1 = r1;  
    
    % Position
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 uip,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Position*');

    pos = plotterT.legPosition;
    if isempty(pos)
        enable  = 'off';
        pos1    = '';
        pos2    = '';
    else
        enable  = 'on';
        pos1    = num2str(pos(1));
        pos2    = num2str(pos(2));
    end
    
    space    = 0.05;
    widthPos = widthPop/2 - space/2;
    
    ed1 = uicontrol(...
              'units',              'normalized',...
              'position',           [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPos, heightPop],...
              'parent',             uip,...
              'background',         [1 1 1],...
              'style',              'edit',...
              'Interruptible',      'off',...
              'horizontalAlignment','right',...
              'string',             pos1,...
              'enable',             enable,...
              'callback',           @gui.setPosition1); 
    gui.editbox1 = ed1; 
    
    ed2 = uicontrol(...
              'units',              'normalized',...
              'position',           [startPopX + widthPos + space, heightPop*(kk-1) + spaceYPop*kk, widthPos, heightPop],...
              'parent',             uip,...
              'background',         [1 1 1],...
              'style',              'edit',...
              'Interruptible',      'off',...
              'horizontalAlignment','right',...
              'string',             pos2,...
              'enable',             enable,...
              'callback',           @gui.setPosition2); 
    gui.editbox2 = ed2;  
    
    % No legend
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol(nb_constant.LABEL,...
              'position', [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',   uip,...
              'string',   'Remove legend*');

    value = plotterT.noLegend;
    uicontrol(nb_constant.RADIOBUTTON,...
              'value',    value,...
              'position', [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPos, heightPop],...
              'parent',   uip,...
              'callback', @gui.setNoLegend); 
          
    % Template note 
    %--------------------------------------------------------------
    nb_graphSettingsGUI.addTemplateFootnote(uip,true);
    
end
