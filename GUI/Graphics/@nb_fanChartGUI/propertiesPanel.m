function propertiesPanel(gui)
% Syntax:
%
% propertiesPanel(gui)
%
% Description:
%
% Part of DAG. Creates a panel for editing fan chart properties  
% 
% Written by Kenneth Sæterhagen Paulsen

% Copyright (c) 2021, Kenneth Sæterhagen Paulsen

    plotterT = gui.plotter;

    % Create panel
    %--------------------------------------------------------------
    uip = uipanel('parent',              gui.figureHandle,...
                  'title',               '',...
                  'visible',             'off',...
                  'borderType',          'none',... 
                  'units',               'normalized',...
                  'position',            [0, 0, 1, 1]); 
    gui.panelHandle2 = uip;
    
    startPopX = 0.3;
    widthPop  = 0.35;
    heightPop = 0.055;
    startTX   = 0.04;
    widthT    = widthPop - startTX*2;
    heightT   = 0.053;
    widthB    = 1 - startPopX - widthPop - startTX*2;
    startB    = startPopX + widthPop + startTX;
    kk        = 9;
    spaceYPop = (1 - heightPop*kk)/(kk +1);
    extra     = -(heightPop - heightT)*5;
    
    % Select fan variable
    %--------------------------------------------------------------
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 gui.panelHandle2,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Select Fan Variable');

    var       = plotterT.fanVariable;
    variables = plotterT.variablesToPlot;
    value     = find(strcmpi(var,variables),1);
    if isempty(value)
        value               = 1;
        plotterT.fanVariable = variables{1};
    end
          
    gui.handle2 = uicontrol(...
              'units',          'normalized',...
              'position',       [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',         gui.panelHandle2,...
              'background',     [1 1 1],...
              'style',          'popupmenu',...
              'Interruptible',  'off',...
              'string',         variables,...
              'value',          value);   
   
    % Select default fan chart color
    %--------------------------------------------------------------
    kk = kk - 1;
    gui.handle8 = uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 gui.panelHandle2,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Select Colorscheme');

    fColor  = plotterT.fanColor;
    fColors = {'nb', 'red', 'blue', 'green', 'yellow', 'magenta', 'cyan', 'white'};
    value   = find(strcmpi(fColor,fColors),1);
    if isempty(value)
        value = 1;
    end
          
    gui.handle3 = uicontrol(...
              'units',          'normalized',...
              'position',       [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',         gui.panelHandle2,...
              'background',     [1 1 1],...
              'style',          'popupmenu',...
              'Interruptible',  'off',...
              'string',         fColors,...
              'value',          value);   
          
    % Graded style      
    gui.handle10 = uicontrol(nb_constant.LABEL,...
              'position',    [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',      gui.panelHandle2,...
              'string',      'Graded style',...
              'visible',     'off');
    value   = 1; 
    gui.handle6 = uicontrol(nb_constant.POPUP,...
              'position',    [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',      gui.panelHandle2,...
              'string',      {'Line','Patch'},...
              'value',       value,...
              'visible',     'off');            
          
    % Number of Percentiles
    %--------------------------------------------------------------
    kk = kk - 1;
    gui.handle9 = uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 gui.panelHandle2,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Number of Percentiles');

    numbers = {' '};
    value   = 1;
            
    gui.handle4 = uicontrol(...
              'units',          'normalized',...
              'position',       [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',         gui.panelHandle2,...
              'background',     [1 1 1],...
              'style',          'popupmenu',...
              'Interruptible',  'off',...
              'string',         numbers,...
              'value',          value,...
              'callback',       @gui.changeTable);
           
    % Graded line width      
    gui.handle11 = uicontrol(nb_constant.LABEL,...
              'position',    [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',      gui.panelHandle2,...
              'string',      'Graded line width',...
              'visible',     'off');
    gui.handle7 = uicontrol(nb_constant.EDIT,...
              'position',    [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',      gui.panelHandle2,...
              'string',      '3',...
              'visible',     'off');    
          
    % Fan chart type
    %--------------------------------------------------------------
    kk = kk - 1;
    uicontrol(...
              'units',                  'normalized',...
              'position',               [startTX, heightPop*(kk-1) + spaceYPop*kk + extra, widthT, heightT],...
              'parent',                 gui.panelHandle2,...
              'style',                  'text',...
              'horizontalAlignment',    'left',...
              'string',                 'Type');

    types = {'percentiles','shaded','graded'};
    value = 1;
          
    gui.handle5 = uicontrol(...
              'units',          'normalized',...
              'position',       [startPopX, heightPop*(kk-1) + spaceYPop*kk, widthPop, heightPop],...
              'parent',         gui.panelHandle2,...
              'background',     [1 1 1],...
              'style',          'popupmenu',...
              'Interruptible',  'off',...
              'string',         types,...
              'value',          value,...
              'callback',       @gui.changeFanMethod);              
          
    % Table with percentiles
    %--------------------------------------------------------------
    kk = kk - 1;
    tableData = {''};
    colNames  = {'Percentiles'};
    colEdit   = true;
    colForm   = {'char'};
    
    tableHeight = 0.3;
    tableWidth  = widthPop;
    tablePos    = nan(1,4);
    tablePos(1) = startPopX;
    tablePos(2) = heightPop*(kk-1) + spaceYPop*kk - tableHeight;
    tablePos(3) = tableWidth;
    tablePos(4) = tableHeight;
    
    gui.table = nb_uitable(uip,...
                    'units',                'normalized',...
                    'position',             tablePos,...
                    'data',                 tableData,...
                    'columnName',           colNames,...
                    'columnFormat',         colForm,...
                    'columnEdit',           colEdit);
          
    % Back button      
    %-------------------------------------------------------------- 
    buttonHeight = 0.05;
    buttonWidth  = 0.2;
    buttonXLoc   = 0.25 - buttonWidth/2;
    buttonYLoc   = tablePos(2)/2 - buttonHeight/2;
    
    uicontrol(...
              'units',              'normalized',...
              'position',           [buttonXLoc, buttonYLoc, buttonWidth, buttonHeight],...
              'parent',             gui.panelHandle2,...
              'style',              'pushbutton',...
              'Interruptible',      'off',...
              'horizontalAlignment','left',...
              'string',             'Back',...
              'callback',           {@back,gui});       
          
    % Finish button      
    %-------------------------------------------------------------- 
    buttonHeight = 0.05;
    buttonWidth  = 0.2;
    buttonXLoc   = 0.75 - buttonWidth/2;
    buttonYLoc   = tablePos(2)/2 - buttonHeight/2;
    
    fb = uicontrol(...
              'units',              'normalized',...
              'position',           [buttonXLoc, buttonYLoc, buttonWidth, buttonHeight],...
              'parent',             gui.panelHandle2,...
              'style',              'pushbutton',...
              'Interruptible',      'off',...
              'horizontalAlignment','left',...
              'string',             'Finish'); 
          
    if strcmpi(gui.type,'dataset')
        set(fb,'callback',@gui.finishFanDataset)
    else
        set(fb,'callback',@gui.finishFanVariables)
    end
    
end

%==================================================================
% Callabcks
%==================================================================
function back(hObject,event,gui)

    set(gui.panelHandle1,'visible','on');
    set(gui.panelHandle2,'visible','off');

end
