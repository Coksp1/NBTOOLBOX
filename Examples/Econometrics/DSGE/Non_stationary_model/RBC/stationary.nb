endogenous
c
dA
i
k
l
r
y

exogenous
u

parameters
beta
delta
g
gamma
lambda
std_u

model

    c(+1)/c * dA(+1)           = beta*(1 + r);
    l                          = 1;
    y                          = l^gamma * (k(-1)/dA)^(1-gamma);
    (1-gamma)*y(+1)/k * dA(+1) = r + delta;
    k                          = (1-delta)*(k(-1)/dA) + i;
    log(dA)                    = (1-lambda)*log(g) + lambda*log(dA(-1)) + std_u*u;
    [static] dA                = g;
    y                          = c + i;
    
% Construct reported variables that can be asked for in IRFs, but
% are not part of the model. Here you can use all MATLAB functions
% that act on a double vector, and returns an output with the same
% size as the input.
reporting

    A         = exp(cumsum(log(dA) - log(steady_state(dA))));
    C         = c*A;
    I         = i*A;
    K         = k*A;
    Y         = y*A;
    c_log_dev = exp(log(c) - log(steady_state(c)));
    i_log_dev = exp(log(i) - log(steady_state(i)));
    k_log_dev = exp(log(k) - log(steady_state(k)));
    r_dev     = r - steady_state(r);
    y_log_dev = exp(log(y) - log(steady_state(y)));
